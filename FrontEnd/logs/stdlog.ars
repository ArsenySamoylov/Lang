Thu Dec 15 13:36:29 2022

main::
  {
  LOG CALLOC:     {0x612000000040} = calloc (306, 1 = 306) from GetSrcFile:27, at ../ATC/Buffer/my_buffer.cpp:27
  Tokenizer::
    {
    LOG CALLOC:     {0x619000000580} = calloc (20, 48 = 960) from Tokenizer:61, at ./src/LexicalAnalysis.cpp:61
    LOG CALLOC:     {0x60c000000040} = calloc (16, 8 = 128) from Tokenizer:67, at ./src/LexicalAnalysis.cpp:67
    BufferCtor::
      {

      BufferCtor:302 returned SUCCESS (return 0;)
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    LOG REALLOC:     {0x619000000580} -> {0x61c000000080} = realloc (new size 1920, old size 960) from Tokenizer:97, at ./src/LexicalAnalysis.cpp:97
    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    LOG REALLOC:     {0x61c000000080} -> {0x620000000080} = realloc (new size 3840, old size 1920) from Tokenizer:97, at ./src/LexicalAnalysis.cpp:97
    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    SetToken::
      {
      }

    LOG REALLOC:     {0x620000000080} -> {0x620000001080} = realloc (new size 3648, old size 3840) from Tokenizer:150, at ./src/LexicalAnalysis.cpp:150
    LOG REALLOC:     {0x60c000000040} -> {0x603000000100} = realloc (new size 32, old size 128) from Tokenizer:153, at ./src/LexicalAnalysis.cpp:153
    	number_of_tokens: 76
    	i: 0
    Token program->token_arr + i
    (0x620000001080)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'func'}
    			  Line: 1
    			Indent: 1
    
    	i: 1
    Token program->token_arr + i
    (0x6200000010b0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: FUNCTION_RET_TYPE | {'void'}
    			  Line: 1
    			Indent: 6
    
    	i: 2
    Token program->token_arr + i
    (0x6200000010e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'helloworld'}
    			  Line: 1
    			Indent: 11
    
    	i: 3
    Token program->token_arr + i
    (0x620000001110)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    			  Line: 1
    			Indent: 21
    
    	i: 4
    Token program->token_arr + i
    (0x620000001140)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    			  Line: 1
    			Indent: 22
    
    	i: 5
    Token program->token_arr + i
    (0x620000001170)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 1
    			Indent: 23
    
    	i: 6
    Token program->token_arr + i
    (0x6200000011a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    			  Line: 3
    			Indent: 1
    
    	i: 7
    Token program->token_arr + i
    (0x6200000011d0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    			  Line: 3
    			Indent: 5
    
    	i: 8
    Token program->token_arr + i
    (0x620000001200)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 3
    			Indent: 7
    
    	i: 9
    Token program->token_arr + i
    (0x620000001230)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'30'}
    			  Line: 3
    			Indent: 9
    
    	i: 10
    Token program->token_arr + i
    (0x620000001260)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'*'}
    			  Line: 3
    			Indent: 12
    
    	i: 11
    Token program->token_arr + i
    (0x620000001290)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'56'}
    			  Line: 3
    			Indent: 14
    
    	i: 12
    Token program->token_arr + i
    (0x6200000012c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 3
    			Indent: 16
    
    	i: 13
    Token program->token_arr + i
    (0x6200000012f0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    			  Line: 4
    			Indent: 1
    
    	i: 14
    Token program->token_arr + i
    (0x620000001320)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'y'}
    			  Line: 4
    			Indent: 5
    
    	i: 15
    Token program->token_arr + i
    (0x620000001350)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 4
    			Indent: 7
    
    	i: 16
    Token program->token_arr + i
    (0x620000001380)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'0'}
    			  Line: 4
    			Indent: 9
    
    	i: 17
    Token program->token_arr + i
    (0x6200000013b0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 4
    			Indent: 10
    
    	i: 18
    Token program->token_arr + i
    (0x6200000013e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: FUNCTION_RET_TYPE | {'void'}
    			  Line: 6
    			Indent: 1
    
    	i: 19
    Token program->token_arr + i
    (0x620000001410)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'helloworld'}
    			  Line: 6
    			Indent: 6
    
    	i: 20
    Token program->token_arr + i
    (0x620000001440)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    			  Line: 6
    			Indent: 16
    
    	i: 21
    Token program->token_arr + i
    (0x620000001470)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    			  Line: 6
    			Indent: 17
    
    	i: 22
    Token program->token_arr + i
    (0x6200000014a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_OPENING_BRACKET | {'{'}
    			  Line: 7
    			Indent: 5
    
    	i: 23
    Token program->token_arr + i
    (0x6200000014d0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NATIVE_FUNCTION | {'fout'}
    			  Line: 8
    			Indent: 5
    
    	i: 24
    Token program->token_arr + i
    (0x620000001500)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'<'}
    			  Line: 8
    			Indent: 10
    
    	i: 25
    Token program->token_arr + i
    (0x620000001530)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'101'}
    			  Line: 8
    			Indent: 13
    
    	i: 26
    Token program->token_arr + i
    (0x620000001560)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 8
    			Indent: 16
    
    	i: 27
    Token program->token_arr + i
    (0x620000001590)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'return'}
    			  Line: 9
    			Indent: 5
    
    	i: 28
    Token program->token_arr + i
    (0x6200000015c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 9
    			Indent: 11
    
    	i: 29
    Token program->token_arr + i
    (0x6200000015f0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_CLOSING_BRACKET | {'}'}
    			  Line: 10
    			Indent: 5
    
    	i: 30
    Token program->token_arr + i
    (0x620000001620)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: FUNCTION_RET_TYPE | {'double'}
    			  Line: 12
    			Indent: 1
    
    	i: 31
    Token program->token_arr + i
    (0x620000001650)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'main'}
    			  Line: 12
    			Indent: 8
    
    	i: 32
    Token program->token_arr + i
    (0x620000001680)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    			  Line: 12
    			Indent: 12
    
    	i: 33
    Token program->token_arr + i
    (0x6200000016b0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    			  Line: 12
    			Indent: 13
    
    	i: 34
    Token program->token_arr + i
    (0x6200000016e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_OPENING_BRACKET | {'{'}
    			  Line: 13
    			Indent: 5
    
    	i: 35
    Token program->token_arr + i
    (0x620000001710)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'if'}
    			  Line: 15
    			Indent: 5
    
    	i: 36
    Token program->token_arr + i
    (0x620000001740)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    			  Line: 15
    			Indent: 8
    
    	i: 37
    Token program->token_arr + i
    (0x620000001770)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'y'}
    			  Line: 15
    			Indent: 9
    
    	i: 38
    Token program->token_arr + i
    (0x6200000017a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    			  Line: 15
    			Indent: 10
    
    	i: 39
    Token program->token_arr + i
    (0x6200000017d0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_OPENING_BRACKET | {'{'}
    			  Line: 16
    			Indent: 9
    
    	i: 40
    Token program->token_arr + i
    (0x620000001800)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    			  Line: 17
    			Indent: 9
    
    	i: 41
    Token program->token_arr + i
    (0x620000001830)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 17
    			Indent: 11
    
    	i: 42
    Token program->token_arr + i
    (0x620000001860)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'45'}
    			  Line: 17
    			Indent: 13
    
    	i: 43
    Token program->token_arr + i
    (0x620000001890)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 17
    			Indent: 15
    
    	i: 44
    Token program->token_arr + i
    (0x6200000018c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    			  Line: 18
    			Indent: 9
    
    	i: 45
    Token program->token_arr + i
    (0x6200000018f0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 18
    			Indent: 11
    
    	i: 46
    Token program->token_arr + i
    (0x620000001920)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'10'}
    			  Line: 18
    			Indent: 13
    
    	i: 47
    Token program->token_arr + i
    (0x620000001950)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 18
    			Indent: 15
    
    	i: 48
    Token program->token_arr + i
    (0x620000001980)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_CLOSING_BRACKET | {'}'}
    			  Line: 19
    			Indent: 9
    
    	i: 49
    Token program->token_arr + i
    (0x6200000019b0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'else'}
    			  Line: 20
    			Indent: 5
    
    	i: 50
    Token program->token_arr + i
    (0x6200000019e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    			  Line: 21
    			Indent: 9
    
    	i: 51
    Token program->token_arr + i
    (0x620000001a10)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 21
    			Indent: 11
    
    	i: 52
    Token program->token_arr + i
    (0x620000001a40)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'20'}
    			  Line: 21
    			Indent: 13
    
    	i: 53
    Token program->token_arr + i
    (0x620000001a70)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 21
    			Indent: 15
    
    	i: 54
    Token program->token_arr + i
    (0x620000001aa0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NATIVE_FUNCTION | {'fout'}
    			  Line: 23
    			Indent: 5
    
    	i: 55
    Token program->token_arr + i
    (0x620000001ad0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'<'}
    			  Line: 23
    			Indent: 10
    
    	i: 56
    Token program->token_arr + i
    (0x620000001b00)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    			  Line: 23
    			Indent: 13
    
    	i: 57
    Token program->token_arr + i
    (0x620000001b30)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 23
    			Indent: 14
    
    	i: 58
    Token program->token_arr + i
    (0x620000001b60)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'helloworld'}
    			  Line: 25
    			Indent: 5
    
    	i: 59
    Token program->token_arr + i
    (0x620000001b90)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    			  Line: 25
    			Indent: 15
    
    	i: 60
    Token program->token_arr + i
    (0x620000001bc0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    			  Line: 25
    			Indent: 16
    
    	i: 61
    Token program->token_arr + i
    (0x620000001bf0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 25
    			Indent: 17
    
    	i: 62
    Token program->token_arr + i
    (0x620000001c20)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    			  Line: 27
    			Indent: 5
    
    	i: 63
    Token program->token_arr + i
    (0x620000001c50)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 27
    			Indent: 7
    
    	i: 64
    Token program->token_arr + i
    (0x620000001c80)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'1'}
    			  Line: 27
    			Indent: 9
    
    	i: 65
    Token program->token_arr + i
    (0x620000001cb0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'*'}
    			  Line: 27
    			Indent: 11
    
    	i: 66
    Token program->token_arr + i
    (0x620000001ce0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    			  Line: 27
    			Indent: 13
    
    	i: 67
    Token program->token_arr + i
    (0x620000001d10)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'4'}
    			  Line: 27
    			Indent: 14
    
    	i: 68
    Token program->token_arr + i
    (0x620000001d40)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'+'}
    			  Line: 27
    			Indent: 16
    
    	i: 69
    Token program->token_arr + i
    (0x620000001d70)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'5'}
    			  Line: 27
    			Indent: 18
    
    	i: 70
    Token program->token_arr + i
    (0x620000001da0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    			  Line: 27
    			Indent: 19
    
    	i: 71
    Token program->token_arr + i
    (0x620000001dd0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 27
    			Indent: 20
    
    	i: 72
    Token program->token_arr + i
    (0x620000001e00)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'return'}
    			  Line: 29
    			Indent: 5
    
    	i: 73
    Token program->token_arr + i
    (0x620000001e30)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'y'}
    			  Line: 29
    			Indent: 12
    
    	i: 74
    Token program->token_arr + i
    (0x620000001e60)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 29
    			Indent: 13
    
    	i: 75
    Token program->token_arr + i
    (0x620000001e90)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_CLOSING_BRACKET | {'}'}
    			  Line: 30
    			Indent: 5
    
    }

  GetG::
    {
    LOG CALLOC:     {0x606000000020} = calloc (1, 56 = 56) from ProgramCtxCtor:20, at ./src/../src/SyntaxAnalysisUtils_.ars:20
    LOG CALLOC:     {0x603000000130} = calloc (1, 24 = 24) from NewFuncTabel:18, at ../Common/Structures/Tabels/Tabels.cpp:18
    LOG CALLOC:     {0x607000000100} = calloc (10, 8 = 80) from NewFuncTabel:22, at ../Common/Structures/Tabels/Tabels.cpp:22
    LOG CALLOC:     {0x603000000160} = calloc (1, 24 = 24) from NewVarTabel:174, at ../Common/Structures/Tabels/Tabels.cpp:174
    LOG CALLOC:     {0x607000000170} = calloc (10, 8 = 80) from NewVarTabel:178, at ../Common/Structures/Tabels/Tabels.cpp:178
    LOG CALLOC:     {0x603000000190} = calloc (1, 24 = 24) from MakeFuncLabel:103, at ./src/../src/SyntaxAnalysisUtils_.ars:103
    LOG CALLOC:     {0x6020000000b0} = calloc (1, 8 = 8) from AddVarLabel:272, at ../Common/Structures/Tabels/Tabels.cpp:272
    GetE::
      {
      GetT::
        {
        GetPower::
          {
          GetP::
            {
            GetN::
              {
              Token result
              (0x620000001230)::::::::::::::::
              		  left_child: (nil)
              		 right_child: (nil)
              		        type: CONSTANT | {'30'}
              			  Line: 3
              			Indent: 9
              
              }

            }

          }

        Token node
        (0x620000001230)::::::::::::::::
        		  left_child: (nil)
        		 right_child: (nil)
        		        type: CONSTANT | {'30'}
        			  Line: 3
        			Indent: 9
        
        Token token
        (0x620000001260)::::::::::::::::
        		  left_child: (nil)
        		 right_child: (nil)
        		        type: OPERATOR | {'*'}
        			  Line: 3
        			Indent: 12
        
        GetPower::
          {
          GetP::
            {
            GetN::
              {
              Token result
              (0x620000001290)::::::::::::::::
              		  left_child: (nil)
              		 right_child: (nil)
              		        type: CONSTANT | {'56'}
              			  Line: 3
              			Indent: 14
              
              }

            }

          }

        }

      }

    LOG CALLOC:     {0x6020000000d0} = calloc (1, 8 = 8) from AddVarLabel:272, at ../Common/Structures/Tabels/Tabels.cpp:272
    GetE::
      {
      GetT::
        {
        GetPower::
          {
          GetP::
            {
            GetN::
              {
              Token result
              (0x620000001380)::::::::::::::::
              		  left_child: (nil)
              		 right_child: (nil)
              		        type: CONSTANT | {'0'}
              			  Line: 4
              			Indent: 9
              
              }

            }

          }

        Token node
        (0x620000001380)::::::::::::::::
        		  left_child: (nil)
        		 right_child: (nil)
        		        type: CONSTANT | {'0'}
        			  Line: 4
        			Indent: 9
        
        }

      }

    GetFunction::
      {
      LOG CALLOC:     {0x6030000001c0} = calloc (1, 24 = 24) from MakeFuncLabel:103, at ./src/../src/SyntaxAnalysisUtils_.ars:103
      GetBlock::
        {
        GetStatement::
          {
          GetNativeFunction::
            {
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x620000001530)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'101'}
                      			  Line: 8
                      			Indent: 13
                      
                      }

                    }

                  }

                Token node
                (0x620000001530)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: CONSTANT | {'101'}
                			  Line: 8
                			Indent: 13
                
                }

              }

            }

          }

        GetStatement::
          {
          GetInstruction::
            {
            }

          }

        }

      }

    GetFunction::
      {
      LOG CALLOC:     {0x6030000001f0} = calloc (1, 24 = 24) from MakeFuncLabel:103, at ./src/../src/SyntaxAnalysisUtils_.ars:103
      GetBlock::
        {
        GetStatement::
          {
          GetInstruction::
            {
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x620000001770)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: VARIABLE | {'y'}
                      			  Line: 15
                      			Indent: 9
                      
                      }

                    }

                  }

                Token node
                (0x620000001770)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: VARIABLE | {'y'}
                			  Line: 15
                			Indent: 9
                
                }

              }

            GetStatement::
              {
              GetBlock::
                {
                GetStatement::
                  {
                  GetStatement::
                    {
                    GetAssigment::
                      {
                      GetE::
                        {
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x620000001860)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'45'}
                                			  Line: 17
                                			Indent: 13
                                
                                }

                              }

                            }

                          Token node
                          (0x620000001860)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'45'}
                          			  Line: 17
                          			Indent: 13
                          
                          }

                        }

                      }

                    }

                  }

                GetStatement::
                  {
                  GetStatement::
                    {
                    GetAssigment::
                      {
                      GetE::
                        {
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x620000001920)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'10'}
                                			  Line: 18
                                			Indent: 13
                                
                                }

                              }

                            }

                          Token node
                          (0x620000001920)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'10'}
                          			  Line: 18
                          			Indent: 13
                          
                          }

                        }

                      }

                    }

                  }

                GetStatement::
                  {
                  }

                }

              }

            GetStatement::
              {
              GetStatement::
                {
                GetAssigment::
                  {
                  GetE::
                    {
                    GetT::
                      {
                      GetPower::
                        {
                        GetP::
                          {
                          GetN::
                            {
                            Token result
                            (0x620000001a40)::::::::::::::::
                            		  left_child: (nil)
                            		 right_child: (nil)
                            		        type: CONSTANT | {'20'}
                            			  Line: 21
                            			Indent: 13
                            
                            }

                          }

                        }

                      Token node
                      (0x620000001a40)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'20'}
                      			  Line: 21
                      			Indent: 13
                      
                      }

                    }

                  }

                }

              }

            }

          }

        GetStatement::
          {
          GetNativeFunction::
            {
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x620000001b00)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: VARIABLE | {'x'}
                      			  Line: 23
                      			Indent: 13
                      
                      }

                    }

                  }

                Token node
                (0x620000001b00)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: VARIABLE | {'x'}
                			  Line: 23
                			Indent: 13
                
                }

              }

            }

          }

        GetStatement::
          {
          GetStatement::
            {
            }

          }

        GetStatement::
          {
          GetStatement::
            {
            GetAssigment::
              {
              GetE::
                {
                GetT::
                  {
                  GetPower::
                    {
                    GetP::
                      {
                      GetN::
                        {
                        Token result
                        (0x620000001c80)::::::::::::::::
                        		  left_child: (nil)
                        		 right_child: (nil)
                        		        type: CONSTANT | {'1'}
                        			  Line: 27
                        			Indent: 9
                        
                        }

                      }

                    }

                  Token node
                  (0x620000001c80)::::::::::::::::
                  		  left_child: (nil)
                  		 right_child: (nil)
                  		        type: CONSTANT | {'1'}
                  			  Line: 27
                  			Indent: 9
                  
                  Token token
                  (0x620000001cb0)::::::::::::::::
                  		  left_child: (nil)
                  		 right_child: (nil)
                  		        type: OPERATOR | {'*'}
                  			  Line: 27
                  			Indent: 11
                  
                  GetPower::
                    {
                    GetP::
                      {
                      GetE::
                        {
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x620000001d10)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'4'}
                                			  Line: 27
                                			Indent: 14
                                
                                }

                              }

                            }

                          Token node
                          (0x620000001d10)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'4'}
                          			  Line: 27
                          			Indent: 14
                          
                          }

                        Token token
                        (0x620000001d40)::::::::::::::::
                        		  left_child: (nil)
                        		 right_child: (nil)
                        		        type: OPERATOR | {'+'}
                        			  Line: 27
                        			Indent: 16
                        
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x620000001d70)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'5'}
                                			  Line: 27
                                			Indent: 18
                                
                                }

                              }

                            }

                          Token node
                          (0x620000001d70)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'5'}
                          			  Line: 27
                          			Indent: 18
                          
                          }

                        }

                      }

                    }

                  }

                }

              }

            }

          }

        GetStatement::
          {
          GetInstruction::
            {
            }

          }

        }

      GetE::
        {
        GetT::
          {
          GetPower::
            {
            GetP::
              {
              GetN::
                {
                Token result
                (0x620000001e30)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: VARIABLE | {'y'}
                			  Line: 29
                			Indent: 12
                
                }

              }

            }

          Token node
          (0x620000001e30)::::::::::::::::
          		  left_child: (nil)
          		 right_child: (nil)
          		        type: VARIABLE | {'y'}
          			  Line: 29
          			Indent: 12
          
          }

        }

      }

    }

  MakeImg::
    {
    PrintNode::
      {
      Token node
      (0x6200000012c0)::::::::::::::::
      		  left_child: 0x6200000011a0
      		 right_child: 0x6200000013b0
      		        type: STATEMENT | {';'}
      			  Line: 3
      			Indent: 16
      
      }

    PrintNode::
      {
      Token node
      (0x6200000011a0)::::::::::::::::
      		  left_child: 0x6200000011d0
      		 right_child: 0x620000001260
      		        type: INITIALIZATOR | {'var'}
      			  Line: 3
      			Indent: 1
      
      }

    PrintNode::
      {
      Token node
      (0x6200000011a0)::::::::::::::::
      		  left_child: 0x6200000011d0
      		 right_child: 0x620000001260
      		        type: INITIALIZATOR | {'var'}
      			  Line: 3
      			Indent: 1
      
      }

    PrintNode::
      {
      Token node
      (0x6200000011d0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 3
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x6200000011d0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 3
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001260)::::::::::::::::
      		  left_child: 0x620000001230
      		 right_child: 0x620000001290
      		        type: OPERATOR | {'*'}
      			  Line: 3
      			Indent: 12
      
      }

    PrintNode::
      {
      Token node
      (0x620000001260)::::::::::::::::
      		  left_child: 0x620000001230
      		 right_child: 0x620000001290
      		        type: OPERATOR | {'*'}
      			  Line: 3
      			Indent: 12
      
      }

    PrintNode::
      {
      Token node
      (0x620000001230)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'30'}
      			  Line: 3
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x620000001230)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'30'}
      			  Line: 3
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x620000001290)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'56'}
      			  Line: 3
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x620000001290)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'56'}
      			  Line: 3
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x6200000013b0)::::::::::::::::
      		  left_child: 0x6200000012f0
      		 right_child: 0x6200000015f0
      		        type: STATEMENT | {';'}
      			  Line: 4
      			Indent: 10
      
      }

    PrintNode::
      {
      Token node
      (0x6200000013b0)::::::::::::::::
      		  left_child: 0x6200000012f0
      		 right_child: 0x6200000015f0
      		        type: STATEMENT | {';'}
      			  Line: 4
      			Indent: 10
      
      }

    PrintNode::
      {
      Token node
      (0x6200000012f0)::::::::::::::::
      		  left_child: 0x620000001320
      		 right_child: 0x620000001380
      		        type: INITIALIZATOR | {'var'}
      			  Line: 4
      			Indent: 1
      
      }

    PrintNode::
      {
      Token node
      (0x6200000012f0)::::::::::::::::
      		  left_child: 0x620000001320
      		 right_child: 0x620000001380
      		        type: INITIALIZATOR | {'var'}
      			  Line: 4
      			Indent: 1
      
      }

    PrintNode::
      {
      Token node
      (0x620000001320)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}
      			  Line: 4
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001320)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}
      			  Line: 4
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001380)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'0'}
      			  Line: 4
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x620000001380)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'0'}
      			  Line: 4
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x6200000015f0)::::::::::::::::
      		  left_child: 0x6200000014a0
      		 right_child: 0x620000001e90
      		        type: STATEMENT | {']'}
      			  Line: 10
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x6200000015f0)::::::::::::::::
      		  left_child: 0x6200000014a0
      		 right_child: 0x620000001e90
      		        type: STATEMENT | {']'}
      			  Line: 10
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x6200000014a0)::::::::::::::::
      		  left_child: 0x620000001410
      		 right_child: 0x620000001560
      		        type: FUNCTION | {'['}
      			  Line: 7
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x6200000014a0)::::::::::::::::
      		  left_child: 0x620000001410
      		 right_child: 0x620000001560
      		        type: FUNCTION | {'['}
      			  Line: 7
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001410)::::::::::::::::
      		  left_child: (nil)
      		 right_child: 0x6200000013e0
      		        type: NAME | {'helloworld'}
      			  Line: 6
      			Indent: 6
      
      }

    PrintNode::
      {
      Token node
      (0x620000001410)::::::::::::::::
      		  left_child: (nil)
      		 right_child: 0x6200000013e0
      		        type: NAME | {'helloworld'}
      			  Line: 6
      			Indent: 6
      
      }

    PrintNode::
      {
      Token node
      (0x6200000013e0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'void'}
      			  Line: 6
      			Indent: 1
      
      }

    PrintNode::
      {
      Token node
      (0x6200000013e0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'void'}
      			  Line: 6
      			Indent: 1
      
      }

    PrintNode::
      {
      Token node
      (0x620000001560)::::::::::::::::
      		  left_child: 0x6200000014d0
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      			  Line: 8
      			Indent: 16
      
      }

    PrintNode::
      {
      Token node
      (0x620000001560)::::::::::::::::
      		  left_child: 0x6200000014d0
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      			  Line: 8
      			Indent: 16
      
      }

    PrintNode::
      {
      Token node
      (0x6200000014d0)::::::::::::::::
      		  left_child: 0x620000001530
      		 right_child: (nil)
      		        type: NATIVE_FUNCTION | {'fout'}
      			  Line: 8
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x6200000014d0)::::::::::::::::
      		  left_child: 0x620000001530
      		 right_child: (nil)
      		        type: NATIVE_FUNCTION | {'fout'}
      			  Line: 8
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001530)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'101'}
      			  Line: 8
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x620000001530)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'101'}
      			  Line: 8
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x620000001e90)::::::::::::::::
      		  left_child: 0x6200000016e0
      		 right_child: (nil)
      		        type: STATEMENT | {']'}
      			  Line: 30
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001e90)::::::::::::::::
      		  left_child: 0x6200000016e0
      		 right_child: (nil)
      		        type: STATEMENT | {']'}
      			  Line: 30
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x6200000016e0)::::::::::::::::
      		  left_child: 0x620000001650
      		 right_child: 0x620000001740
      		        type: FUNCTION | {'['}
      			  Line: 13
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x6200000016e0)::::::::::::::::
      		  left_child: 0x620000001650
      		 right_child: 0x620000001740
      		        type: FUNCTION | {'['}
      			  Line: 13
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001650)::::::::::::::::
      		  left_child: (nil)
      		 right_child: 0x620000001620
      		        type: NAME | {'main'}
      			  Line: 12
      			Indent: 8
      
      }

    PrintNode::
      {
      Token node
      (0x620000001650)::::::::::::::::
      		  left_child: (nil)
      		 right_child: 0x620000001620
      		        type: NAME | {'main'}
      			  Line: 12
      			Indent: 8
      
      }

    PrintNode::
      {
      Token node
      (0x620000001620)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'double'}
      			  Line: 12
      			Indent: 1
      
      }

    PrintNode::
      {
      Token node
      (0x620000001620)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'double'}
      			  Line: 12
      			Indent: 1
      
      }

    PrintNode::
      {
      Token node
      (0x620000001740)::::::::::::::::
      		  left_child: 0x620000001710
      		 right_child: 0x620000001b30
      		        type: STATEMENT | {'('}
      			  Line: 15
      			Indent: 8
      
      }

    PrintNode::
      {
      Token node
      (0x620000001740)::::::::::::::::
      		  left_child: 0x620000001710
      		 right_child: 0x620000001b30
      		        type: STATEMENT | {'('}
      			  Line: 15
      			Indent: 8
      
      }

    PrintNode::
      {
      Token node
      (0x620000001710)::::::::::::::::
      		  left_child: 0x620000001770
      		 right_child: 0x6200000019b0
      		        type: INSTRUCTION | {'if'}
      			  Line: 15
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001710)::::::::::::::::
      		  left_child: 0x620000001770
      		 right_child: 0x6200000019b0
      		        type: INSTRUCTION | {'if'}
      			  Line: 15
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001770)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}
      			  Line: 15
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x620000001770)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}
      			  Line: 15
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x6200000019b0)::::::::::::::::
      		  left_child: 0x620000001890
      		 right_child: 0x620000001a70
      		        type: INSTRUCTION | {'else'}
      			  Line: 20
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x6200000019b0)::::::::::::::::
      		  left_child: 0x620000001890
      		 right_child: 0x620000001a70
      		        type: INSTRUCTION | {'else'}
      			  Line: 20
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001890)::::::::::::::::
      		  left_child: 0x620000001830
      		 right_child: 0x620000001950
      		        type: STATEMENT | {';'}
      			  Line: 17
      			Indent: 15
      
      }

    PrintNode::
      {
      Token node
      (0x620000001890)::::::::::::::::
      		  left_child: 0x620000001830
      		 right_child: 0x620000001950
      		        type: STATEMENT | {';'}
      			  Line: 17
      			Indent: 15
      
      }

    PrintNode::
      {
      Token node
      (0x620000001830)::::::::::::::::
      		  left_child: 0x620000001800
      		 right_child: 0x620000001860
      		        type: ASSIGMENT | {'='}
      			  Line: 17
      			Indent: 11
      
      }

    PrintNode::
      {
      Token node
      (0x620000001830)::::::::::::::::
      		  left_child: 0x620000001800
      		 right_child: 0x620000001860
      		        type: ASSIGMENT | {'='}
      			  Line: 17
      			Indent: 11
      
      }

    PrintNode::
      {
      Token node
      (0x620000001800)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 17
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x620000001800)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 17
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x620000001860)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'45'}
      			  Line: 17
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x620000001860)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'45'}
      			  Line: 17
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x620000001950)::::::::::::::::
      		  left_child: 0x6200000018f0
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      			  Line: 18
      			Indent: 15
      
      }

    PrintNode::
      {
      Token node
      (0x620000001950)::::::::::::::::
      		  left_child: 0x6200000018f0
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      			  Line: 18
      			Indent: 15
      
      }

    PrintNode::
      {
      Token node
      (0x6200000018f0)::::::::::::::::
      		  left_child: 0x6200000018c0
      		 right_child: 0x620000001920
      		        type: ASSIGMENT | {'='}
      			  Line: 18
      			Indent: 11
      
      }

    PrintNode::
      {
      Token node
      (0x6200000018f0)::::::::::::::::
      		  left_child: 0x6200000018c0
      		 right_child: 0x620000001920
      		        type: ASSIGMENT | {'='}
      			  Line: 18
      			Indent: 11
      
      }

    PrintNode::
      {
      Token node
      (0x6200000018c0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 18
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x6200000018c0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 18
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x620000001920)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'10'}
      			  Line: 18
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x620000001920)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'10'}
      			  Line: 18
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x620000001a70)::::::::::::::::
      		  left_child: 0x620000001a10
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      			  Line: 21
      			Indent: 15
      
      }

    PrintNode::
      {
      Token node
      (0x620000001a70)::::::::::::::::
      		  left_child: 0x620000001a10
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      			  Line: 21
      			Indent: 15
      
      }

    PrintNode::
      {
      Token node
      (0x620000001a10)::::::::::::::::
      		  left_child: 0x6200000019e0
      		 right_child: 0x620000001a40
      		        type: ASSIGMENT | {'='}
      			  Line: 21
      			Indent: 11
      
      }

    PrintNode::
      {
      Token node
      (0x620000001a10)::::::::::::::::
      		  left_child: 0x6200000019e0
      		 right_child: 0x620000001a40
      		        type: ASSIGMENT | {'='}
      			  Line: 21
      			Indent: 11
      
      }

    PrintNode::
      {
      Token node
      (0x6200000019e0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 21
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x6200000019e0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 21
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x620000001a40)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'20'}
      			  Line: 21
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x620000001a40)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'20'}
      			  Line: 21
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x620000001b30)::::::::::::::::
      		  left_child: 0x620000001aa0
      		 right_child: 0x620000001b90
      		        type: STATEMENT | {';'}
      			  Line: 23
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x620000001b30)::::::::::::::::
      		  left_child: 0x620000001aa0
      		 right_child: 0x620000001b90
      		        type: STATEMENT | {';'}
      			  Line: 23
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x620000001aa0)::::::::::::::::
      		  left_child: 0x620000001b00
      		 right_child: (nil)
      		        type: NATIVE_FUNCTION | {'fout'}
      			  Line: 23
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001aa0)::::::::::::::::
      		  left_child: 0x620000001b00
      		 right_child: (nil)
      		        type: NATIVE_FUNCTION | {'fout'}
      			  Line: 23
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001b00)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 23
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x620000001b00)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 23
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x620000001b90)::::::::::::::::
      		  left_child: 0x620000001bf0
      		 right_child: 0x620000001dd0
      		        type: STATEMENT | {'('}
      			  Line: 25
      			Indent: 15
      
      }

    PrintNode::
      {
      Token node
      (0x620000001b90)::::::::::::::::
      		  left_child: 0x620000001bf0
      		 right_child: 0x620000001dd0
      		        type: STATEMENT | {'('}
      			  Line: 25
      			Indent: 15
      
      }

    PrintNode::
      {
      Token node
      (0x620000001bf0)::::::::::::::::
      		  left_child: 0x620000001b60
      		 right_child: (nil)
      		        type: CALL | {';'}
      			  Line: 25
      			Indent: 17
      
      }

    PrintNode::
      {
      Token node
      (0x620000001bf0)::::::::::::::::
      		  left_child: 0x620000001b60
      		 right_child: (nil)
      		        type: CALL | {';'}
      			  Line: 25
      			Indent: 17
      
      }

    PrintNode::
      {
      Token node
      (0x620000001b60)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: NAME | {'helloworld'}
      			  Line: 25
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001b60)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: NAME | {'helloworld'}
      			  Line: 25
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001dd0)::::::::::::::::
      		  left_child: 0x620000001c50
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      			  Line: 27
      			Indent: 20
      
      }

    PrintNode::
      {
      Token node
      (0x620000001dd0)::::::::::::::::
      		  left_child: 0x620000001c50
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      			  Line: 27
      			Indent: 20
      
      }

    PrintNode::
      {
      Token node
      (0x620000001c50)::::::::::::::::
      		  left_child: 0x620000001c20
      		 right_child: 0x620000001cb0
      		        type: ASSIGMENT | {'='}
      			  Line: 27
      			Indent: 7
      
      }

    PrintNode::
      {
      Token node
      (0x620000001c50)::::::::::::::::
      		  left_child: 0x620000001c20
      		 right_child: 0x620000001cb0
      		        type: ASSIGMENT | {'='}
      			  Line: 27
      			Indent: 7
      
      }

    PrintNode::
      {
      Token node
      (0x620000001c20)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 27
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001c20)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 27
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x620000001cb0)::::::::::::::::
      		  left_child: 0x620000001c80
      		 right_child: 0x620000001d40
      		        type: OPERATOR | {'*'}
      			  Line: 27
      			Indent: 11
      
      }

    PrintNode::
      {
      Token node
      (0x620000001cb0)::::::::::::::::
      		  left_child: 0x620000001c80
      		 right_child: 0x620000001d40
      		        type: OPERATOR | {'*'}
      			  Line: 27
      			Indent: 11
      
      }

    PrintNode::
      {
      Token node
      (0x620000001c80)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'1'}
      			  Line: 27
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x620000001c80)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'1'}
      			  Line: 27
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x620000001d40)::::::::::::::::
      		  left_child: 0x620000001d10
      		 right_child: 0x620000001d70
      		        type: OPERATOR | {'+'}
      			  Line: 27
      			Indent: 16
      
      }

    PrintNode::
      {
      Token node
      (0x620000001d40)::::::::::::::::
      		  left_child: 0x620000001d10
      		 right_child: 0x620000001d70
      		        type: OPERATOR | {'+'}
      			  Line: 27
      			Indent: 16
      
      }

    PrintNode::
      {
      Token node
      (0x620000001d10)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'4'}
      			  Line: 27
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x620000001d10)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'4'}
      			  Line: 27
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x620000001d70)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'5'}
      			  Line: 27
      			Indent: 18
      
      }

    PrintNode::
      {
      Token node
      (0x620000001d70)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'5'}
      			  Line: 27
      			Indent: 18
      
      }

    }

  Token token
  (0x6200000012c0)::::::::::::::::
  		  left_child: 0x6200000011a0
  		 right_child: 0x6200000013b0
  		        type: STATEMENT | {';'}
  			  Line: 3
  			Indent: 16
  
  Token token
  (0x6200000013b0)::::::::::::::::
  		  left_child: 0x6200000012f0
  		 right_child: 0x6200000015f0
  		        type: STATEMENT | {';'}
  			  Line: 4
  			Indent: 10
  
  Token token
  (0x6200000015f0)::::::::::::::::
  		  left_child: 0x6200000014a0
  		 right_child: 0x620000001e90
  		        type: STATEMENT | {']'}
  			  Line: 10
  			Indent: 5
  
  Token token
  (0x620000001e90)::::::::::::::::
  		  left_child: 0x6200000016e0
  		 right_child: (nil)
  		        type: STATEMENT | {']'}
  			  Line: 30
  			Indent: 5
  
  Token token
  (0x6200000016e0)::::::::::::::::
  		  left_child: 0x620000001650
  		 right_child: 0x620000001740
  		        type: FUNCTION | {'['}
  			  Line: 13
  			Indent: 5
  
  Token token
  (0x620000001620)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: FUNCTION_RET_TYPE | {'double'}
  			  Line: 12
  			Indent: 1
  
  Token token
  (0x620000001740)::::::::::::::::
  		  left_child: 0x620000001710
  		 right_child: 0x620000001b30
  		        type: STATEMENT | {'('}
  			  Line: 15
  			Indent: 8
  
  Token token
  (0x620000001b30)::::::::::::::::
  		  left_child: 0x620000001aa0
  		 right_child: 0x620000001b90
  		        type: STATEMENT | {';'}
  			  Line: 23
  			Indent: 14
  
  Token token
  (0x620000001b90)::::::::::::::::
  		  left_child: 0x620000001bf0
  		 right_child: 0x620000001dd0
  		        type: STATEMENT | {'('}
  			  Line: 25
  			Indent: 15
  
  Token token
  (0x620000001dd0)::::::::::::::::
  		  left_child: 0x620000001c50
  		 right_child: (nil)
  		        type: STATEMENT | {';'}
  			  Line: 27
  			Indent: 20
  
  Token token
  (0x620000001c50)::::::::::::::::
  		  left_child: 0x620000001c20
  		 right_child: 0x620000001cb0
  		        type: ASSIGMENT | {'='}
  			  Line: 27
  			Indent: 7
  
  Token token
  (0x620000001c20)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'x'}
  			  Line: 27
  			Indent: 5
  
  Token token
  (0x620000001cb0)::::::::::::::::
  		  left_child: 0x620000001c80
  		 right_child: 0x620000001d40
  		        type: OPERATOR | {'*'}
  			  Line: 27
  			Indent: 11
  
  Token token
  (0x620000001c80)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'1'}
  			  Line: 27
  			Indent: 9
  
  Token token
  (0x620000001d40)::::::::::::::::
  		  left_child: 0x620000001d10
  		 right_child: 0x620000001d70
  		        type: OPERATOR | {'+'}
  			  Line: 27
  			Indent: 16
  
  Token token
  (0x620000001d10)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'4'}
  			  Line: 27
  			Indent: 14
  
  Token token
  (0x620000001d70)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'5'}
  			  Line: 27
  			Indent: 18
  
  Token token
  (0x620000001bf0)::::::::::::::::
  		  left_child: 0x620000001b60
  		 right_child: (nil)
  		        type: CALL | {';'}
  			  Line: 25
  			Indent: 17
  
  Token token
  (0x620000001aa0)::::::::::::::::
  		  left_child: 0x620000001b00
  		 right_child: (nil)
  		        type: NATIVE_FUNCTION | {'fout'}
  			  Line: 23
  			Indent: 5
  
  Token token
  (0x620000001b00)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'x'}
  			  Line: 23
  			Indent: 13
  
  Token token
  (0x620000001710)::::::::::::::::
  		  left_child: 0x620000001770
  		 right_child: 0x6200000019b0
  		        type: INSTRUCTION | {'if'}
  			  Line: 15
  			Indent: 5
  
  Token token
  (0x620000001770)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'y'}
  			  Line: 15
  			Indent: 9
  
  Token token
  (0x6200000019b0)::::::::::::::::
  		  left_child: 0x620000001890
  		 right_child: 0x620000001a70
  		        type: INSTRUCTION | {'else'}
  			  Line: 20
  			Indent: 5
  
  Token token
  (0x620000001890)::::::::::::::::
  		  left_child: 0x620000001830
  		 right_child: 0x620000001950
  		        type: STATEMENT | {';'}
  			  Line: 17
  			Indent: 15
  
  Token token
  (0x620000001950)::::::::::::::::
  		  left_child: 0x6200000018f0
  		 right_child: (nil)
  		        type: STATEMENT | {';'}
  			  Line: 18
  			Indent: 15
  
  Token token
  (0x6200000018f0)::::::::::::::::
  		  left_child: 0x6200000018c0
  		 right_child: 0x620000001920
  		        type: ASSIGMENT | {'='}
  			  Line: 18
  			Indent: 11
  
  Token token
  (0x6200000018c0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'x'}
  			  Line: 18
  			Indent: 9
  
  Token token
  (0x620000001920)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'10'}
  			  Line: 18
  			Indent: 13
  
  Token token
  (0x620000001830)::::::::::::::::
  		  left_child: 0x620000001800
  		 right_child: 0x620000001860
  		        type: ASSIGMENT | {'='}
  			  Line: 17
  			Indent: 11
  
  Token token
  (0x620000001800)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'x'}
  			  Line: 17
  			Indent: 9
  
  Token token
  (0x620000001860)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'45'}
  			  Line: 17
  			Indent: 13
  
  Token token
  (0x620000001a70)::::::::::::::::
  		  left_child: 0x620000001a10
  		 right_child: (nil)
  		        type: STATEMENT | {';'}
  			  Line: 21
  			Indent: 15
  
  Token token
  (0x620000001a10)::::::::::::::::
  		  left_child: 0x6200000019e0
  		 right_child: 0x620000001a40
  		        type: ASSIGMENT | {'='}
  			  Line: 21
  			Indent: 11
  
  Token token
  (0x6200000019e0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'x'}
  			  Line: 21
  			Indent: 9
  
  Token token
  (0x620000001a40)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'20'}
  			  Line: 21
  			Indent: 13
  
  Token token
  (0x6200000014a0)::::::::::::::::
  		  left_child: 0x620000001410
  		 right_child: 0x620000001560
  		        type: FUNCTION | {'['}
  			  Line: 7
  			Indent: 5
  
  Token token
  (0x6200000013e0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: FUNCTION_RET_TYPE | {'void'}
  			  Line: 6
  			Indent: 1
  
  Token token
  (0x620000001560)::::::::::::::::
  		  left_child: 0x6200000014d0
  		 right_child: (nil)
  		        type: STATEMENT | {';'}
  			  Line: 8
  			Indent: 16
  
  Token token
  (0x6200000014d0)::::::::::::::::
  		  left_child: 0x620000001530
  		 right_child: (nil)
  		        type: NATIVE_FUNCTION | {'fout'}
  			  Line: 8
  			Indent: 5
  
  Token token
  (0x620000001530)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'101'}
  			  Line: 8
  			Indent: 13
  
  Token token
  (0x6200000012f0)::::::::::::::::
  		  left_child: 0x620000001320
  		 right_child: 0x620000001380
  		        type: INITIALIZATOR | {'var'}
  			  Line: 4
  			Indent: 1
  
  Token token
  (0x620000001320)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'y'}
  			  Line: 4
  			Indent: 5
  
  Token token
  (0x620000001380)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'0'}
  			  Line: 4
  			Indent: 9
  
  Token token
  (0x6200000011a0)::::::::::::::::
  		  left_child: 0x6200000011d0
  		 right_child: 0x620000001260
  		        type: INITIALIZATOR | {'var'}
  			  Line: 3
  			Indent: 1
  
  Token token
  (0x6200000011d0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'x'}
  			  Line: 3
  			Indent: 5
  
  Token token
  (0x620000001260)::::::::::::::::
  		  left_child: 0x620000001230
  		 right_child: 0x620000001290
  		        type: OPERATOR | {'*'}
  			  Line: 3
  			Indent: 12
  
  Token token
  (0x620000001230)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'30'}
  			  Line: 3
  			Indent: 9
  
  Token token
  (0x620000001290)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'56'}
  			  Line: 3
  			Indent: 14
  
  LOG FREE(kill): {0x6120000001c0} - will be freed from main:60, at ./src/main.cpp:60
  }

*********************************************************************
		Log Successfuly ended, on Thu Dec 15 13:36:29 2022
*********************************************************************
