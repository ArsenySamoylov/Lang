Fri Dec 16 22:17:33 2022

main::
  {
  LOG CALLOC:     {0x615000000800} = calloc (453, 1 = 453) from GetSrcFile:31, at ../ATC/Buffer/my_buffer.cpp:31
  Tokenizer::
    {
    LOG CALLOC:     {0x619000000580} = calloc (20, 48 = 960) from LexicalCtxCtor:14, at ../Common/LexicalCtx/LexicalCtx.cpp:14
    LOG CALLOC:     {0x60c000000040} = calloc (16, 8 = 128) from LexicalCtxCtor:20, at ../Common/LexicalCtx/LexicalCtx.cpp:20
    LOG CALLOC:     {0x603000000100} = calloc (1, 24 = 24) from LexicalCtxCtor:27, at ../Common/LexicalCtx/LexicalCtx.cpp:27
    BufferCtor::
      {

      BufferCtor:306 returned SUCCESS (return 0;)
      }

    LOG REALLOC:     {0x619000000580} -> {0x61c000000080} = realloc (new size 1920, old size 960) from GetToken:85, at ../Common/LexicalCtx/LexicalCtx.cpp:85
    LOG REALLOC:     {0x61c000000080} -> {0x620000000080} = realloc (new size 3840, old size 1920) from GetToken:85, at ../Common/LexicalCtx/LexicalCtx.cpp:85
    LOG REALLOC:     {0x620000000080} -> {0x624000002100} = realloc (new size 7680, old size 3840) from GetToken:85, at ../Common/LexicalCtx/LexicalCtx.cpp:85
    LOG REALLOC:     {0x624000002100} -> {0x622000000100} = realloc (new size 5520, old size 7680) from Tokenizer:93, at ./src/LexicalAnalysis.cpp:93
    LOG REALLOC:     {0x60c000000040} -> {0x604000000010} = realloc (new size 40, old size 128) from Tokenizer:96, at ./src/LexicalAnalysis.cpp:96
    LOG FREE(kill): {0x603000000100} - will be freed from Tokenizer:100, at ./src/LexicalAnalysis.cpp:100
    	program->number_of_tokens: 115
    	i: 0
    Token program->token_arr + i
    (0x622000000100)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'extern'}
    			  Line: 1
    			Indent: 1
    
    	i: 1
    Token program->token_arr + i
    (0x622000000130)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: FUNCTION_RET_TYPE | {'void'}
    			  Line: 1
    			Indent: 8
    
    	i: 2
    Token program->token_arr + i
    (0x622000000160)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'helloworld'}
    			  Line: 1
    			Indent: 13
    
    	i: 3
    Token program->token_arr + i
    (0x622000000190)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    			  Line: 1
    			Indent: 23
    
    	i: 4
    Token program->token_arr + i
    (0x6220000001c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    			  Line: 1
    			Indent: 24
    
    	i: 5
    Token program->token_arr + i
    (0x6220000001f0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 1
    			Indent: 25
    
    	i: 6
    Token program->token_arr + i
    (0x622000000220)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: FUNCTION_RET_TYPE | {'double'}
    			  Line: 3
    			Indent: 1
    
    	i: 7
    Token program->token_arr + i
    (0x622000000250)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'main'}
    			  Line: 3
    			Indent: 8
    
    	i: 8
    Token program->token_arr + i
    (0x622000000280)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    			  Line: 3
    			Indent: 12
    
    	i: 9
    Token program->token_arr + i
    (0x6220000002b0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    			  Line: 3
    			Indent: 13
    
    	i: 10
    Token program->token_arr + i
    (0x6220000002e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_OPENING_BRACKET | {'{'}
    			  Line: 4
    			Indent: 5
    
    	i: 11
    Token program->token_arr + i
    (0x622000000310)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    			  Line: 5
    			Indent: 5
    
    	i: 12
    Token program->token_arr + i
    (0x622000000340)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'main'}
    			  Line: 5
    			Indent: 9
    
    	i: 13
    Token program->token_arr + i
    (0x622000000370)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 5
    			Indent: 14
    
    	i: 14
    Token program->token_arr + i
    (0x6220000003a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'3'}
    			  Line: 5
    			Indent: 16
    
    	i: 15
    Token program->token_arr + i
    (0x6220000003d0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 5
    			Indent: 17
    
    	i: 16
    Token program->token_arr + i
    (0x622000000400)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    			  Line: 9
    			Indent: 5
    
    	i: 17
    Token program->token_arr + i
    (0x622000000430)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'y'}
    			  Line: 9
    			Indent: 9
    
    	i: 18
    Token program->token_arr + i
    (0x622000000460)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 9
    			Indent: 11
    
    	i: 19
    Token program->token_arr + i
    (0x622000000490)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'4'}
    			  Line: 9
    			Indent: 13
    
    	i: 20
    Token program->token_arr + i
    (0x6220000004c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 9
    			Indent: 14
    
    	i: 21
    Token program->token_arr + i
    (0x6220000004f0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    			  Line: 10
    			Indent: 5
    
    	i: 22
    Token program->token_arr + i
    (0x622000000520)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'z'}
    			  Line: 10
    			Indent: 9
    
    	i: 23
    Token program->token_arr + i
    (0x622000000550)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 10
    			Indent: 11
    
    	i: 24
    Token program->token_arr + i
    (0x622000000580)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'5'}
    			  Line: 10
    			Indent: 13
    
    	i: 25
    Token program->token_arr + i
    (0x6220000005b0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 10
    			Indent: 14
    
    	i: 26
    Token program->token_arr + i
    (0x6220000005e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    			  Line: 11
    			Indent: 5
    
    	i: 27
    Token program->token_arr + i
    (0x622000000610)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    			  Line: 11
    			Indent: 9
    
    	i: 28
    Token program->token_arr + i
    (0x622000000640)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 11
    			Indent: 11
    
    	i: 29
    Token program->token_arr + i
    (0x622000000670)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'0'}
    			  Line: 11
    			Indent: 12
    
    	i: 30
    Token program->token_arr + i
    (0x6220000006a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 11
    			Indent: 13
    
    	i: 31
    Token program->token_arr + i
    (0x6220000006d0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'if'}
    			  Line: 13
    			Indent: 5
    
    	i: 32
    Token program->token_arr + i
    (0x622000000700)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    			  Line: 13
    			Indent: 8
    
    	i: 33
    Token program->token_arr + i
    (0x622000000730)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'10'}
    			  Line: 13
    			Indent: 9
    
    	i: 34
    Token program->token_arr + i
    (0x622000000760)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    			  Line: 13
    			Indent: 11
    
    	i: 35
    Token program->token_arr + i
    (0x622000000790)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_OPENING_BRACKET | {'{'}
    			  Line: 14
    			Indent: 5
    
    	i: 36
    Token program->token_arr + i
    (0x6220000007c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    			  Line: 15
    			Indent: 6
    
    	i: 37
    Token program->token_arr + i
    (0x6220000007f0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    			  Line: 15
    			Indent: 10
    
    	i: 38
    Token program->token_arr + i
    (0x622000000820)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 15
    			Indent: 12
    
    	i: 39
    Token program->token_arr + i
    (0x622000000850)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'5'}
    			  Line: 15
    			Indent: 14
    
    	i: 40
    Token program->token_arr + i
    (0x622000000880)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 15
    			Indent: 15
    
    	i: 41
    Token program->token_arr + i
    (0x6220000008b0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    			  Line: 17
    			Indent: 5
    
    	i: 42
    Token program->token_arr + i
    (0x6220000008e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 17
    			Indent: 7
    
    	i: 43
    Token program->token_arr + i
    (0x622000000910)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'5'}
    			  Line: 17
    			Indent: 9
    
    	i: 44
    Token program->token_arr + i
    (0x622000000940)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'*'}
    			  Line: 17
    			Indent: 11
    
    	i: 45
    Token program->token_arr + i
    (0x622000000970)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'7'}
    			  Line: 17
    			Indent: 13
    
    	i: 46
    Token program->token_arr + i
    (0x6220000009a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'/'}
    			  Line: 17
    			Indent: 15
    
    	i: 47
    Token program->token_arr + i
    (0x6220000009d0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'3'}
    			  Line: 17
    			Indent: 16
    
    	i: 48
    Token program->token_arr + i
    (0x622000000a00)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 17
    			Indent: 17
    
    	i: 49
    Token program->token_arr + i
    (0x622000000a30)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    			  Line: 18
    			Indent: 5
    
    	i: 50
    Token program->token_arr + i
    (0x622000000a60)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'y'}
    			  Line: 18
    			Indent: 9
    
    	i: 51
    Token program->token_arr + i
    (0x622000000a90)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 18
    			Indent: 11
    
    	i: 52
    Token program->token_arr + i
    (0x622000000ac0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'5'}
    			  Line: 18
    			Indent: 13
    
    	i: 53
    Token program->token_arr + i
    (0x622000000af0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 18
    			Indent: 14
    
    	i: 54
    Token program->token_arr + i
    (0x622000000b20)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    			  Line: 19
    			Indent: 5
    
    	i: 55
    Token program->token_arr + i
    (0x622000000b50)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'z'}
    			  Line: 19
    			Indent: 9
    
    	i: 56
    Token program->token_arr + i
    (0x622000000b80)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 19
    			Indent: 11
    
    	i: 57
    Token program->token_arr + i
    (0x622000000bb0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'3'}
    			  Line: 19
    			Indent: 13
    
    	i: 58
    Token program->token_arr + i
    (0x622000000be0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 19
    			Indent: 14
    
    	i: 59
    Token program->token_arr + i
    (0x622000000c10)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_CLOSING_BRACKET | {'}'}
    			  Line: 20
    			Indent: 5
    
    	i: 60
    Token program->token_arr + i
    (0x622000000c40)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'if'}
    			  Line: 22
    			Indent: 5
    
    	i: 61
    Token program->token_arr + i
    (0x622000000c70)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    			  Line: 22
    			Indent: 8
    
    	i: 62
    Token program->token_arr + i
    (0x622000000ca0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'y'}
    			  Line: 22
    			Indent: 9
    
    	i: 63
    Token program->token_arr + i
    (0x622000000cd0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    			  Line: 22
    			Indent: 10
    
    	i: 64
    Token program->token_arr + i
    (0x622000000d00)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_OPENING_BRACKET | {'{'}
    			  Line: 23
    			Indent: 9
    
    	i: 65
    Token program->token_arr + i
    (0x622000000d30)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    			  Line: 24
    			Indent: 9
    
    	i: 66
    Token program->token_arr + i
    (0x622000000d60)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    			  Line: 24
    			Indent: 13
    
    	i: 67
    Token program->token_arr + i
    (0x622000000d90)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 24
    			Indent: 15
    
    	i: 68
    Token program->token_arr + i
    (0x622000000dc0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'10'}
    			  Line: 24
    			Indent: 17
    
    	i: 69
    Token program->token_arr + i
    (0x622000000df0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 24
    			Indent: 19
    
    	i: 70
    Token program->token_arr + i
    (0x622000000e20)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    			  Line: 25
    			Indent: 9
    
    	i: 71
    Token program->token_arr + i
    (0x622000000e50)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'y'}
    			  Line: 25
    			Indent: 13
    
    	i: 72
    Token program->token_arr + i
    (0x622000000e80)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 25
    			Indent: 15
    
    	i: 73
    Token program->token_arr + i
    (0x622000000eb0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'2'}
    			  Line: 25
    			Indent: 17
    
    	i: 74
    Token program->token_arr + i
    (0x622000000ee0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 25
    			Indent: 18
    
    	i: 75
    Token program->token_arr + i
    (0x622000000f10)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    			  Line: 26
    			Indent: 9
    
    	i: 76
    Token program->token_arr + i
    (0x622000000f40)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'z'}
    			  Line: 26
    			Indent: 13
    
    	i: 77
    Token program->token_arr + i
    (0x622000000f70)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 26
    			Indent: 15
    
    	i: 78
    Token program->token_arr + i
    (0x622000000fa0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'0'}
    			  Line: 26
    			Indent: 17
    
    	i: 79
    Token program->token_arr + i
    (0x622000000fd0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 26
    			Indent: 18
    
    	i: 80
    Token program->token_arr + i
    (0x622000001000)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_CLOSING_BRACKET | {'}'}
    			  Line: 27
    			Indent: 9
    
    	i: 81
    Token program->token_arr + i
    (0x622000001030)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NATIVE_FUNCTION | {'fout'}
    			  Line: 29
    			Indent: 5
    
    	i: 82
    Token program->token_arr + i
    (0x622000001060)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'<'}
    			  Line: 29
    			Indent: 10
    
    	i: 83
    Token program->token_arr + i
    (0x622000001090)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    			  Line: 29
    			Indent: 13
    
    	i: 84
    Token program->token_arr + i
    (0x6220000010c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 29
    			Indent: 14
    
    	i: 85
    Token program->token_arr + i
    (0x6220000010f0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'helloworld'}
    			  Line: 31
    			Indent: 5
    
    	i: 86
    Token program->token_arr + i
    (0x622000001120)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    			  Line: 31
    			Indent: 15
    
    	i: 87
    Token program->token_arr + i
    (0x622000001150)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    			  Line: 31
    			Indent: 16
    
    	i: 88
    Token program->token_arr + i
    (0x622000001180)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 31
    			Indent: 17
    
    	i: 89
    Token program->token_arr + i
    (0x6220000011b0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    			  Line: 33
    			Indent: 5
    
    	i: 90
    Token program->token_arr + i
    (0x6220000011e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    			  Line: 33
    			Indent: 7
    
    	i: 91
    Token program->token_arr + i
    (0x622000001210)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'1'}
    			  Line: 33
    			Indent: 9
    
    	i: 92
    Token program->token_arr + i
    (0x622000001240)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'*'}
    			  Line: 33
    			Indent: 11
    
    	i: 93
    Token program->token_arr + i
    (0x622000001270)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    			  Line: 33
    			Indent: 13
    
    	i: 94
    Token program->token_arr + i
    (0x6220000012a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'4'}
    			  Line: 33
    			Indent: 14
    
    	i: 95
    Token program->token_arr + i
    (0x6220000012d0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'+'}
    			  Line: 33
    			Indent: 16
    
    	i: 96
    Token program->token_arr + i
    (0x622000001300)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'5'}
    			  Line: 33
    			Indent: 18
    
    	i: 97
    Token program->token_arr + i
    (0x622000001330)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    			  Line: 33
    			Indent: 19
    
    	i: 98
    Token program->token_arr + i
    (0x622000001360)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 33
    			Indent: 20
    
    	i: 99
    Token program->token_arr + i
    (0x622000001390)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'return'}
    			  Line: 35
    			Indent: 5
    
    	i: 100
    Token program->token_arr + i
    (0x6220000013c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'0'}
    			  Line: 35
    			Indent: 12
    
    	i: 101
    Token program->token_arr + i
    (0x6220000013f0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 35
    			Indent: 13
    
    	i: 102
    Token program->token_arr + i
    (0x622000001420)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_CLOSING_BRACKET | {'}'}
    			  Line: 36
    			Indent: 5
    
    	i: 103
    Token program->token_arr + i
    (0x622000001450)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: FUNCTION_RET_TYPE | {'void'}
    			  Line: 38
    			Indent: 1
    
    	i: 104
    Token program->token_arr + i
    (0x622000001480)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'helloworld'}
    			  Line: 38
    			Indent: 6
    
    	i: 105
    Token program->token_arr + i
    (0x6220000014b0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    			  Line: 38
    			Indent: 16
    
    	i: 106
    Token program->token_arr + i
    (0x6220000014e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    			  Line: 38
    			Indent: 17
    
    	i: 107
    Token program->token_arr + i
    (0x622000001510)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_OPENING_BRACKET | {'{'}
    			  Line: 39
    			Indent: 5
    
    	i: 108
    Token program->token_arr + i
    (0x622000001540)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NATIVE_FUNCTION | {'fout'}
    			  Line: 40
    			Indent: 5
    
    	i: 109
    Token program->token_arr + i
    (0x622000001570)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'<'}
    			  Line: 40
    			Indent: 10
    
    	i: 110
    Token program->token_arr + i
    (0x6220000015a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'4'}
    			  Line: 40
    			Indent: 13
    
    	i: 111
    Token program->token_arr + i
    (0x6220000015d0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 40
    			Indent: 14
    
    	i: 112
    Token program->token_arr + i
    (0x622000001600)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'return'}
    			  Line: 41
    			Indent: 5
    
    	i: 113
    Token program->token_arr + i
    (0x622000001630)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    			  Line: 41
    			Indent: 11
    
    	i: 114
    Token program->token_arr + i
    (0x622000001660)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_CLOSING_BRACKET | {'}'}
    			  Line: 42
    			Indent: 5
    
    }

  GetG::
    {
    LOG CALLOC:     {0x606000000020} = calloc (1, 56 = 56) from ProgramCtxCtor:72, at ./src/../src/SyntaxAnalysisUtils_.ars:72
    LOG CALLOC:     {0x603000000130} = calloc (1, 24 = 24) from NewFuncTabel:18, at ../Common/Structures/Tabels/Tabels.cpp:18
    LOG CALLOC:     {0x607000000100} = calloc (10, 8 = 80) from NewFuncTabel:22, at ../Common/Structures/Tabels/Tabels.cpp:22
    LOG CALLOC:     {0x603000000160} = calloc (1, 24 = 24) from NewVarTabel:197, at ../Common/Structures/Tabels/Tabels.cpp:197
    LOG CALLOC:     {0x607000000170} = calloc (10, 8 = 80) from NewVarTabel:201, at ../Common/Structures/Tabels/Tabels.cpp:201
    FuncInitialization::
      {
      NewFuncLabel::
        {
        LOG CALLOC:     {0x603000000190} = calloc (1, 24 = 24) from NewFuncLabel:141, at ../Common/Structures/Tabels/Tabels.cpp:141
        }

      	position: 0
      }

    GetFunction::
      {
      NewFuncLabel::
        {
        LOG CALLOC:     {0x6030000001c0} = calloc (1, 24 = 24) from NewFuncLabel:141, at ../Common/Structures/Tabels/Tabels.cpp:141
        }

      	position: 1
      	FUNC_TABEL(program_ctx)->number_of_labels: 2
      	program_ctx->current_func_label: 1
      GetBlock::
        {
        LOG CALLOC:     {0x6030000001f0} = calloc (1, 24 = 24) from NewVarTabel:197, at ../Common/Structures/Tabels/Tabels.cpp:197
        LOG CALLOC:     {0x6070000001e0} = calloc (10, 8 = 80) from NewVarTabel:201, at ../Common/Structures/Tabels/Tabels.cpp:201
        GetStatement::
          {
          LOG CALLOC:     {0x6020000000d0} = calloc (1, 8 = 8) from AddVarLabel:295, at ../Common/Structures/Tabels/Tabels.cpp:295
          GetE::
            {
            GetT::
              {
              GetPower::
                {
                GetP::
                  {
                  GetN::
                    {
                    Token result
                    (0x6220000003a0)::::::::::::::::
                    		  left_child: (nil)
                    		 right_child: (nil)
                    		        type: CONSTANT | {'3'}
                    			  Line: 5
                    			Indent: 16
                    
                    }

                  }

                }

              Token node
              (0x6220000003a0)::::::::::::::::
              		  left_child: (nil)
              		 right_child: (nil)
              		        type: CONSTANT | {'3'}
              			  Line: 5
              			Indent: 16
              
              }

            }

          }

        GetStatement::
          {
          LOG CALLOC:     {0x6020000000f0} = calloc (1, 8 = 8) from AddVarLabel:295, at ../Common/Structures/Tabels/Tabels.cpp:295
          GetE::
            {
            GetT::
              {
              GetPower::
                {
                GetP::
                  {
                  GetN::
                    {
                    Token result
                    (0x622000000490)::::::::::::::::
                    		  left_child: (nil)
                    		 right_child: (nil)
                    		        type: CONSTANT | {'4'}
                    			  Line: 9
                    			Indent: 13
                    
                    }

                  }

                }

              Token node
              (0x622000000490)::::::::::::::::
              		  left_child: (nil)
              		 right_child: (nil)
              		        type: CONSTANT | {'4'}
              			  Line: 9
              			Indent: 13
              
              }

            }

          }

        GetStatement::
          {
          LOG CALLOC:     {0x602000000110} = calloc (1, 8 = 8) from AddVarLabel:295, at ../Common/Structures/Tabels/Tabels.cpp:295
          GetE::
            {
            GetT::
              {
              GetPower::
                {
                GetP::
                  {
                  GetN::
                    {
                    Token result
                    (0x622000000580)::::::::::::::::
                    		  left_child: (nil)
                    		 right_child: (nil)
                    		        type: CONSTANT | {'5'}
                    			  Line: 10
                    			Indent: 13
                    
                    }

                  }

                }

              Token node
              (0x622000000580)::::::::::::::::
              		  left_child: (nil)
              		 right_child: (nil)
              		        type: CONSTANT | {'5'}
              			  Line: 10
              			Indent: 13
              
              }

            }

          }

        GetStatement::
          {
          LOG CALLOC:     {0x602000000130} = calloc (1, 8 = 8) from AddVarLabel:295, at ../Common/Structures/Tabels/Tabels.cpp:295
          GetE::
            {
            GetT::
              {
              GetPower::
                {
                GetP::
                  {
                  GetN::
                    {
                    Token result
                    (0x622000000670)::::::::::::::::
                    		  left_child: (nil)
                    		 right_child: (nil)
                    		        type: CONSTANT | {'0'}
                    			  Line: 11
                    			Indent: 12
                    
                    }

                  }

                }

              Token node
              (0x622000000670)::::::::::::::::
              		  left_child: (nil)
              		 right_child: (nil)
              		        type: CONSTANT | {'0'}
              			  Line: 11
              			Indent: 12
              
              }

            }

          }

        GetStatement::
          {
          GetInstruction::
            {
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x622000000730)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'10'}
                      			  Line: 13
                      			Indent: 9
                      
                      }

                    }

                  }

                Token node
                (0x622000000730)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: CONSTANT | {'10'}
                			  Line: 13
                			Indent: 9
                
                }

              }

            GetStatement::
              {
              GetBlock::
                {
                LOG CALLOC:     {0x603000000220} = calloc (1, 24 = 24) from NewVarTabel:197, at ../Common/Structures/Tabels/Tabels.cpp:197
                LOG CALLOC:     {0x607000000250} = calloc (10, 8 = 80) from NewVarTabel:201, at ../Common/Structures/Tabels/Tabels.cpp:201
                GetStatement::
                  {
                  LOG CALLOC:     {0x602000000150} = calloc (1, 8 = 8) from AddVarLabel:295, at ../Common/Structures/Tabels/Tabels.cpp:295
                  GetE::
                    {
                    GetT::
                      {
                      GetPower::
                        {
                        GetP::
                          {
                          GetN::
                            {
                            Token result
                            (0x622000000850)::::::::::::::::
                            		  left_child: (nil)
                            		 right_child: (nil)
                            		        type: CONSTANT | {'5'}
                            			  Line: 15
                            			Indent: 14
                            
                            }

                          }

                        }

                      Token node
                      (0x622000000850)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'5'}
                      			  Line: 15
                      			Indent: 14
                      
                      }

                    }

                  }

                GetStatement::
                  {
                  GetStatement::
                    {
                    GetAssigment::
                      {
                      GetE::
                        {
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x622000000910)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'5'}
                                			  Line: 17
                                			Indent: 9
                                
                                }

                              }

                            }

                          Token node
                          (0x622000000910)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'5'}
                          			  Line: 17
                          			Indent: 9
                          
                          Token token
                          (0x622000000940)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: OPERATOR | {'*'}
                          			  Line: 17
                          			Indent: 11
                          
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x622000000970)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'7'}
                                			  Line: 17
                                			Indent: 13
                                
                                }

                              }

                            }

                          Token token
                          (0x6220000009a0)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: OPERATOR | {'/'}
                          			  Line: 17
                          			Indent: 15
                          
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x6220000009d0)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'3'}
                                			  Line: 17
                                			Indent: 16
                                
                                }

                              }

                            }

                          }

                        }

                      }

                    }

                  }

                GetStatement::
                  {
                  LOG CALLOC:     {0x602000000170} = calloc (1, 8 = 8) from AddVarLabel:295, at ../Common/Structures/Tabels/Tabels.cpp:295
                  GetE::
                    {
                    GetT::
                      {
                      GetPower::
                        {
                        GetP::
                          {
                          GetN::
                            {
                            Token result
                            (0x622000000ac0)::::::::::::::::
                            		  left_child: (nil)
                            		 right_child: (nil)
                            		        type: CONSTANT | {'5'}
                            			  Line: 18
                            			Indent: 13
                            
                            }

                          }

                        }

                      Token node
                      (0x622000000ac0)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'5'}
                      			  Line: 18
                      			Indent: 13
                      
                      }

                    }

                  }

                GetStatement::
                  {
                  LOG CALLOC:     {0x602000000190} = calloc (1, 8 = 8) from AddVarLabel:295, at ../Common/Structures/Tabels/Tabels.cpp:295
                  GetE::
                    {
                    GetT::
                      {
                      GetPower::
                        {
                        GetP::
                          {
                          GetN::
                            {
                            Token result
                            (0x622000000bb0)::::::::::::::::
                            		  left_child: (nil)
                            		 right_child: (nil)
                            		        type: CONSTANT | {'3'}
                            			  Line: 19
                            			Indent: 13
                            
                            }

                          }

                        }

                      Token node
                      (0x622000000bb0)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'3'}
                      			  Line: 19
                      			Indent: 13
                      
                      }

                    }

                  }

                GetStatement::
                  {
                  }

                LOG FREE(kill): {0x602000000150} - will be freed from CloseVarTabel:241, at ../Common/Structures/Tabels/Tabels.cpp:241
                LOG FREE(kill): {0x602000000170} - will be freed from CloseVarTabel:241, at ../Common/Structures/Tabels/Tabels.cpp:241
                LOG FREE(kill): {0x602000000190} - will be freed from CloseVarTabel:241, at ../Common/Structures/Tabels/Tabels.cpp:241
                LOG FREE(kill): {0x607000000250} - will be freed from CloseVarTabel:244, at ../Common/Structures/Tabels/Tabels.cpp:244
                LOG FREE(kill): {0x603000000220} - will be freed from CloseVarTabel:245, at ../Common/Structures/Tabels/Tabels.cpp:245
                }

              }

            }

          }

        GetStatement::
          {
          GetInstruction::
            {
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x622000000ca0)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: VARIABLE | {'y'}
                      			  Line: 22
                      			Indent: 9
                      
                      }

                    }

                  }

                Token node
                (0x622000000ca0)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: VARIABLE | {'y'}
                			  Line: 22
                			Indent: 9
                
                }

              }

            GetStatement::
              {
              GetBlock::
                {
                LOG CALLOC:     {0x603000000250} = calloc (1, 24 = 24) from NewVarTabel:197, at ../Common/Structures/Tabels/Tabels.cpp:197
                LOG CALLOC:     {0x6070000002c0} = calloc (10, 8 = 80) from NewVarTabel:201, at ../Common/Structures/Tabels/Tabels.cpp:201
                GetStatement::
                  {
                  LOG CALLOC:     {0x6020000001b0} = calloc (1, 8 = 8) from AddVarLabel:295, at ../Common/Structures/Tabels/Tabels.cpp:295
                  GetE::
                    {
                    GetT::
                      {
                      GetPower::
                        {
                        GetP::
                          {
                          GetN::
                            {
                            Token result
                            (0x622000000dc0)::::::::::::::::
                            		  left_child: (nil)
                            		 right_child: (nil)
                            		        type: CONSTANT | {'10'}
                            			  Line: 24
                            			Indent: 17
                            
                            }

                          }

                        }

                      Token node
                      (0x622000000dc0)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'10'}
                      			  Line: 24
                      			Indent: 17
                      
                      }

                    }

                  }

                GetStatement::
                  {
                  LOG CALLOC:     {0x6020000001d0} = calloc (1, 8 = 8) from AddVarLabel:295, at ../Common/Structures/Tabels/Tabels.cpp:295
                  GetE::
                    {
                    GetT::
                      {
                      GetPower::
                        {
                        GetP::
                          {
                          GetN::
                            {
                            Token result
                            (0x622000000eb0)::::::::::::::::
                            		  left_child: (nil)
                            		 right_child: (nil)
                            		        type: CONSTANT | {'2'}
                            			  Line: 25
                            			Indent: 17
                            
                            }

                          }

                        }

                      Token node
                      (0x622000000eb0)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'2'}
                      			  Line: 25
                      			Indent: 17
                      
                      }

                    }

                  }

                GetStatement::
                  {
                  LOG CALLOC:     {0x6020000001f0} = calloc (1, 8 = 8) from AddVarLabel:295, at ../Common/Structures/Tabels/Tabels.cpp:295
                  GetE::
                    {
                    GetT::
                      {
                      GetPower::
                        {
                        GetP::
                          {
                          GetN::
                            {
                            Token result
                            (0x622000000fa0)::::::::::::::::
                            		  left_child: (nil)
                            		 right_child: (nil)
                            		        type: CONSTANT | {'0'}
                            			  Line: 26
                            			Indent: 17
                            
                            }

                          }

                        }

                      Token node
                      (0x622000000fa0)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'0'}
                      			  Line: 26
                      			Indent: 17
                      
                      }

                    }

                  }

                GetStatement::
                  {
                  }

                LOG FREE(kill): {0x6020000001b0} - will be freed from CloseVarTabel:241, at ../Common/Structures/Tabels/Tabels.cpp:241
                LOG FREE(kill): {0x6020000001d0} - will be freed from CloseVarTabel:241, at ../Common/Structures/Tabels/Tabels.cpp:241
                LOG FREE(kill): {0x6020000001f0} - will be freed from CloseVarTabel:241, at ../Common/Structures/Tabels/Tabels.cpp:241
                LOG FREE(kill): {0x6070000002c0} - will be freed from CloseVarTabel:244, at ../Common/Structures/Tabels/Tabels.cpp:244
                LOG FREE(kill): {0x603000000250} - will be freed from CloseVarTabel:245, at ../Common/Structures/Tabels/Tabels.cpp:245
                }

              }

            }

          }

        GetStatement::
          {
          GetNativeFunction::
            {
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x622000001090)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: VARIABLE | {'x'}
                      			  Line: 29
                      			Indent: 13
                      
                      }

                    }

                  }

                Token node
                (0x622000001090)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: VARIABLE | {'x'}
                			  Line: 29
                			Indent: 13
                
                }

              }

            }

          }

        GetStatement::
          {
          GetStatement::
            {
            }

          }

        GetStatement::
          {
          GetStatement::
            {
            GetAssigment::
              {
              GetE::
                {
                GetT::
                  {
                  GetPower::
                    {
                    GetP::
                      {
                      GetN::
                        {
                        Token result
                        (0x622000001210)::::::::::::::::
                        		  left_child: (nil)
                        		 right_child: (nil)
                        		        type: CONSTANT | {'1'}
                        			  Line: 33
                        			Indent: 9
                        
                        }

                      }

                    }

                  Token node
                  (0x622000001210)::::::::::::::::
                  		  left_child: (nil)
                  		 right_child: (nil)
                  		        type: CONSTANT | {'1'}
                  			  Line: 33
                  			Indent: 9
                  
                  Token token
                  (0x622000001240)::::::::::::::::
                  		  left_child: (nil)
                  		 right_child: (nil)
                  		        type: OPERATOR | {'*'}
                  			  Line: 33
                  			Indent: 11
                  
                  GetPower::
                    {
                    GetP::
                      {
                      GetE::
                        {
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x6220000012a0)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'4'}
                                			  Line: 33
                                			Indent: 14
                                
                                }

                              }

                            }

                          Token node
                          (0x6220000012a0)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'4'}
                          			  Line: 33
                          			Indent: 14
                          
                          }

                        Token token
                        (0x6220000012d0)::::::::::::::::
                        		  left_child: (nil)
                        		 right_child: (nil)
                        		        type: OPERATOR | {'+'}
                        			  Line: 33
                        			Indent: 16
                        
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x622000001300)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'5'}
                                			  Line: 33
                                			Indent: 18
                                
                                }

                              }

                            }

                          Token node
                          (0x622000001300)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'5'}
                          			  Line: 33
                          			Indent: 18
                          
                          }

                        }

                      }

                    }

                  }

                }

              }

            }

          }

        GetStatement::
          {
          GetInstruction::
            {
            	FUNC_TABEL(program_ctx)->number_of_labels: 2
            	program_ctx->current_func_label: 1
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x6220000013c0)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'0'}
                      			  Line: 35
                      			Indent: 12
                      
                      }

                    }

                  }

                Token node
                (0x6220000013c0)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: CONSTANT | {'0'}
                			  Line: 35
                			Indent: 12
                
                }

              }

            }

          }

        GetStatement::
          {
          }

        LOG FREE(kill): {0x6020000000d0} - will be freed from CloseVarTabel:241, at ../Common/Structures/Tabels/Tabels.cpp:241
        LOG FREE(kill): {0x6020000000f0} - will be freed from CloseVarTabel:241, at ../Common/Structures/Tabels/Tabels.cpp:241
        LOG FREE(kill): {0x602000000110} - will be freed from CloseVarTabel:241, at ../Common/Structures/Tabels/Tabels.cpp:241
        LOG FREE(kill): {0x602000000130} - will be freed from CloseVarTabel:241, at ../Common/Structures/Tabels/Tabels.cpp:241
        LOG FREE(kill): {0x6070000001e0} - will be freed from CloseVarTabel:244, at ../Common/Structures/Tabels/Tabels.cpp:244
        LOG FREE(kill): {0x6030000001f0} - will be freed from CloseVarTabel:245, at ../Common/Structures/Tabels/Tabels.cpp:245
        }

      }

    GetFunction::
      {
      NewFuncLabel::
        {
        LOG CALLOC:     {0x603000000280} = calloc (1, 24 = 24) from NewFuncLabel:141, at ../Common/Structures/Tabels/Tabels.cpp:141
        }

      LOG FREE(kill): {0x603000000280} - will be freed from MakeFuncLabel:243, at ./src/../src/SyntaxAnalysisUtils_.ars:243
      	FUNC_TABEL(program_ctx)->number_of_labels: 2
      	program_ctx->current_func_label: 0
      GetBlock::
        {
        LOG CALLOC:     {0x6030000002b0} = calloc (1, 24 = 24) from NewVarTabel:197, at ../Common/Structures/Tabels/Tabels.cpp:197
        LOG CALLOC:     {0x607000000330} = calloc (10, 8 = 80) from NewVarTabel:201, at ../Common/Structures/Tabels/Tabels.cpp:201
        GetStatement::
          {
          GetNativeFunction::
            {
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x6220000015a0)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'4'}
                      			  Line: 40
                      			Indent: 13
                      
                      }

                    }

                  }

                Token node
                (0x6220000015a0)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: CONSTANT | {'4'}
                			  Line: 40
                			Indent: 13
                
                }

              }

            }

          }

        GetStatement::
          {
          GetInstruction::
            {
            	FUNC_TABEL(program_ctx)->number_of_labels: 2
            	program_ctx->current_func_label: 0
            }

          }

        GetStatement::
          {
          }

        LOG FREE(kill): {0x607000000330} - will be freed from CloseVarTabel:244, at ../Common/Structures/Tabels/Tabels.cpp:244
        LOG FREE(kill): {0x6030000002b0} - will be freed from CloseVarTabel:245, at ../Common/Structures/Tabels/Tabels.cpp:245
        }

      }

    LOG FREE(kill): {0x607000000170} - will be freed from CloseVarTabel:244, at ../Common/Structures/Tabels/Tabels.cpp:244
    LOG FREE(kill): {0x603000000160} - will be freed from CloseVarTabel:245, at ../Common/Structures/Tabels/Tabels.cpp:245
    LOG FREE(kill): {0x603000000190} - will be freed from CloseFuncTabel:65, at ../Common/Structures/Tabels/Tabels.cpp:65
    LOG FREE(kill): {0x6030000001c0} - will be freed from CloseFuncTabel:65, at ../Common/Structures/Tabels/Tabels.cpp:65
    LOG FREE(kill): {0x607000000100} - will be freed from CloseFuncTabel:68, at ../Common/Structures/Tabels/Tabels.cpp:68
    LOG FREE(kill): {0x603000000130} - will be freed from CloseFuncTabel:69, at ../Common/Structures/Tabels/Tabels.cpp:69
    }

  MakeImg::
    {
    PrintNode::
      {
      Token node
      (0x622000001420)::::::::::::::::
      		  left_child: 0x6220000002b0
      		 right_child: 0x622000001660
      		        type: STATEMENT | {']'}
      			  Line: 36
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x6220000002b0)::::::::::::::::
      		  left_child: 0x622000000250
      		 right_child: 0x6220000003d0
      		        type: FUNCTION | {')'}
      			  Line: 3
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x622000000250)::::::::::::::::
      		  left_child: (nil)
      		 right_child: 0x622000000220
      		        type: NAME | {'main'}
      			  Line: 3
      			Indent: 8
      
      }

    PrintNode::
      {
      Token node
      (0x622000000220)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'double'}
      			  Line: 3
      			Indent: 1
      
      }

    PrintNode::
      {
      Token node
      (0x6220000003d0)::::::::::::::::
      		  left_child: 0x622000000310
      		 right_child: 0x6220000004c0
      		        type: STATEMENT | {';'}
      			  Line: 5
      			Indent: 17
      
      }

    PrintNode::
      {
      Token node
      (0x622000000310)::::::::::::::::
      		  left_child: 0x622000000340
      		 right_child: 0x6220000003a0
      		        type: INITIALIZATOR | {'var'}
      			  Line: 5
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x622000000340)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'main'}
      			  Line: 5
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x6220000003a0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'3'}
      			  Line: 5
      			Indent: 16
      
      }

    PrintNode::
      {
      Token node
      (0x6220000004c0)::::::::::::::::
      		  left_child: 0x622000000400
      		 right_child: 0x6220000005b0
      		        type: STATEMENT | {';'}
      			  Line: 9
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x622000000400)::::::::::::::::
      		  left_child: 0x622000000430
      		 right_child: 0x622000000490
      		        type: INITIALIZATOR | {'var'}
      			  Line: 9
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x622000000430)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}
      			  Line: 9
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x622000000490)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'4'}
      			  Line: 9
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x6220000005b0)::::::::::::::::
      		  left_child: 0x6220000004f0
      		 right_child: 0x6220000006a0
      		        type: STATEMENT | {';'}
      			  Line: 10
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x6220000004f0)::::::::::::::::
      		  left_child: 0x622000000520
      		 right_child: 0x622000000580
      		        type: INITIALIZATOR | {'var'}
      			  Line: 10
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x622000000520)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'z'}
      			  Line: 10
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x622000000580)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'5'}
      			  Line: 10
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x6220000006a0)::::::::::::::::
      		  left_child: 0x6220000005e0
      		 right_child: 0x622000000700
      		        type: STATEMENT | {';'}
      			  Line: 11
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x6220000005e0)::::::::::::::::
      		  left_child: 0x622000000610
      		 right_child: 0x622000000670
      		        type: INITIALIZATOR | {'var'}
      			  Line: 11
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x622000000610)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 11
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x622000000670)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'0'}
      			  Line: 11
      			Indent: 12
      
      }

    PrintNode::
      {
      Token node
      (0x622000000700)::::::::::::::::
      		  left_child: 0x6220000006d0
      		 right_child: 0x622000000c70
      		        type: STATEMENT | {'('}
      			  Line: 13
      			Indent: 8
      
      }

    PrintNode::
      {
      Token node
      (0x6220000006d0)::::::::::::::::
      		  left_child: 0x622000000730
      		 right_child: 0x622000000c10
      		        type: INSTRUCTION | {'if'}
      			  Line: 13
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x622000000730)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'10'}
      			  Line: 13
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x622000000c10)::::::::::::::::
      		  left_child: 0x622000000880
      		 right_child: (nil)
      		        type: STATEMENT | {']'}
      			  Line: 20
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x622000000880)::::::::::::::::
      		  left_child: 0x6220000007c0
      		 right_child: 0x622000000a00
      		        type: STATEMENT | {';'}
      			  Line: 15
      			Indent: 15
      
      }

    PrintNode::
      {
      Token node
      (0x6220000007c0)::::::::::::::::
      		  left_child: 0x6220000007f0
      		 right_child: 0x622000000850
      		        type: INITIALIZATOR | {'var'}
      			  Line: 15
      			Indent: 6
      
      }

    PrintNode::
      {
      Token node
      (0x6220000007f0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 15
      			Indent: 10
      
      }

    PrintNode::
      {
      Token node
      (0x622000000850)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'5'}
      			  Line: 15
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x622000000a00)::::::::::::::::
      		  left_child: 0x6220000008e0
      		 right_child: 0x622000000af0
      		        type: STATEMENT | {';'}
      			  Line: 17
      			Indent: 17
      
      }

    PrintNode::
      {
      Token node
      (0x6220000008e0)::::::::::::::::
      		  left_child: 0x6220000008b0
      		 right_child: 0x6220000009a0
      		        type: ASSIGMENT | {'='}
      			  Line: 17
      			Indent: 7
      
      }

    PrintNode::
      {
      Token node
      (0x6220000008b0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 17
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x6220000009a0)::::::::::::::::
      		  left_child: 0x622000000940
      		 right_child: 0x6220000009d0
      		        type: OPERATOR | {'/'}
      			  Line: 17
      			Indent: 15
      
      }

    PrintNode::
      {
      Token node
      (0x622000000940)::::::::::::::::
      		  left_child: 0x622000000910
      		 right_child: 0x622000000970
      		        type: OPERATOR | {'*'}
      			  Line: 17
      			Indent: 11
      
      }

    PrintNode::
      {
      Token node
      (0x622000000910)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'5'}
      			  Line: 17
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x622000000970)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'7'}
      			  Line: 17
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x6220000009d0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'3'}
      			  Line: 17
      			Indent: 16
      
      }

    PrintNode::
      {
      Token node
      (0x622000000af0)::::::::::::::::
      		  left_child: 0x622000000a30
      		 right_child: 0x622000000be0
      		        type: STATEMENT | {';'}
      			  Line: 18
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x622000000a30)::::::::::::::::
      		  left_child: 0x622000000a60
      		 right_child: 0x622000000ac0
      		        type: INITIALIZATOR | {'var'}
      			  Line: 18
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x622000000a60)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}
      			  Line: 18
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x622000000ac0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'5'}
      			  Line: 18
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x622000000be0)::::::::::::::::
      		  left_child: 0x622000000b20
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      			  Line: 19
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x622000000b20)::::::::::::::::
      		  left_child: 0x622000000b50
      		 right_child: 0x622000000bb0
      		        type: INITIALIZATOR | {'var'}
      			  Line: 19
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x622000000b50)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'z'}
      			  Line: 19
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x622000000bb0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'3'}
      			  Line: 19
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x622000000c70)::::::::::::::::
      		  left_child: 0x622000000c40
      		 right_child: 0x6220000010c0
      		        type: STATEMENT | {'('}
      			  Line: 22
      			Indent: 8
      
      }

    PrintNode::
      {
      Token node
      (0x622000000c40)::::::::::::::::
      		  left_child: 0x622000000ca0
      		 right_child: 0x622000001000
      		        type: INSTRUCTION | {'if'}
      			  Line: 22
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x622000000ca0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}
      			  Line: 22
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x622000001000)::::::::::::::::
      		  left_child: 0x622000000df0
      		 right_child: (nil)
      		        type: STATEMENT | {']'}
      			  Line: 27
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x622000000df0)::::::::::::::::
      		  left_child: 0x622000000d30
      		 right_child: 0x622000000ee0
      		        type: STATEMENT | {';'}
      			  Line: 24
      			Indent: 19
      
      }

    PrintNode::
      {
      Token node
      (0x622000000d30)::::::::::::::::
      		  left_child: 0x622000000d60
      		 right_child: 0x622000000dc0
      		        type: INITIALIZATOR | {'var'}
      			  Line: 24
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x622000000d60)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 24
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x622000000dc0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'10'}
      			  Line: 24
      			Indent: 17
      
      }

    PrintNode::
      {
      Token node
      (0x622000000ee0)::::::::::::::::
      		  left_child: 0x622000000e20
      		 right_child: 0x622000000fd0
      		        type: STATEMENT | {';'}
      			  Line: 25
      			Indent: 18
      
      }

    PrintNode::
      {
      Token node
      (0x622000000e20)::::::::::::::::
      		  left_child: 0x622000000e50
      		 right_child: 0x622000000eb0
      		        type: INITIALIZATOR | {'var'}
      			  Line: 25
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x622000000e50)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}
      			  Line: 25
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x622000000eb0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'2'}
      			  Line: 25
      			Indent: 17
      
      }

    PrintNode::
      {
      Token node
      (0x622000000fd0)::::::::::::::::
      		  left_child: 0x622000000f10
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      			  Line: 26
      			Indent: 18
      
      }

    PrintNode::
      {
      Token node
      (0x622000000f10)::::::::::::::::
      		  left_child: 0x622000000f40
      		 right_child: 0x622000000fa0
      		        type: INITIALIZATOR | {'var'}
      			  Line: 26
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x622000000f40)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'z'}
      			  Line: 26
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x622000000fa0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'0'}
      			  Line: 26
      			Indent: 17
      
      }

    PrintNode::
      {
      Token node
      (0x6220000010c0)::::::::::::::::
      		  left_child: 0x622000001030
      		 right_child: 0x622000001120
      		        type: STATEMENT | {';'}
      			  Line: 29
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x622000001030)::::::::::::::::
      		  left_child: 0x622000001090
      		 right_child: (nil)
      		        type: NATIVE_FUNCTION | {'fout'}
      			  Line: 29
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x622000001090)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 29
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x622000001120)::::::::::::::::
      		  left_child: 0x622000001180
      		 right_child: 0x622000001360
      		        type: STATEMENT | {'('}
      			  Line: 31
      			Indent: 15
      
      }

    PrintNode::
      {
      Token node
      (0x622000001180)::::::::::::::::
      		  left_child: 0x6220000010f0
      		 right_child: (nil)
      		        type: CALL | {';'}
      			  Line: 31
      			Indent: 17
      
      }

    PrintNode::
      {
      Token node
      (0x6220000010f0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: NAME | {'helloworld'}
      			  Line: 31
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x622000001360)::::::::::::::::
      		  left_child: 0x6220000011e0
      		 right_child: 0x6220000013f0
      		        type: STATEMENT | {';'}
      			  Line: 33
      			Indent: 20
      
      }

    PrintNode::
      {
      Token node
      (0x6220000011e0)::::::::::::::::
      		  left_child: 0x6220000011b0
      		 right_child: 0x622000001240
      		        type: ASSIGMENT | {'='}
      			  Line: 33
      			Indent: 7
      
      }

    PrintNode::
      {
      Token node
      (0x6220000011b0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      			  Line: 33
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x622000001240)::::::::::::::::
      		  left_child: 0x622000001210
      		 right_child: 0x6220000012d0
      		        type: OPERATOR | {'*'}
      			  Line: 33
      			Indent: 11
      
      }

    PrintNode::
      {
      Token node
      (0x622000001210)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'1'}
      			  Line: 33
      			Indent: 9
      
      }

    PrintNode::
      {
      Token node
      (0x6220000012d0)::::::::::::::::
      		  left_child: 0x6220000012a0
      		 right_child: 0x622000001300
      		        type: OPERATOR | {'+'}
      			  Line: 33
      			Indent: 16
      
      }

    PrintNode::
      {
      Token node
      (0x6220000012a0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'4'}
      			  Line: 33
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x622000001300)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'5'}
      			  Line: 33
      			Indent: 18
      
      }

    PrintNode::
      {
      Token node
      (0x6220000013f0)::::::::::::::::
      		  left_child: 0x622000001390
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      			  Line: 35
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x622000001390)::::::::::::::::
      		  left_child: 0x6220000013c0
      		 right_child: (nil)
      		        type: INSTRUCTION | {'return'}
      			  Line: 35
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x6220000013c0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'0'}
      			  Line: 35
      			Indent: 12
      
      }

    PrintNode::
      {
      Token node
      (0x622000001660)::::::::::::::::
      		  left_child: 0x6220000014e0
      		 right_child: (nil)
      		        type: STATEMENT | {']'}
      			  Line: 42
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x6220000014e0)::::::::::::::::
      		  left_child: 0x622000001480
      		 right_child: 0x6220000015d0
      		        type: FUNCTION | {')'}
      			  Line: 38
      			Indent: 17
      
      }

    PrintNode::
      {
      Token node
      (0x622000001480)::::::::::::::::
      		  left_child: (nil)
      		 right_child: 0x622000001450
      		        type: NAME | {'helloworld'}
      			  Line: 38
      			Indent: 6
      
      }

    PrintNode::
      {
      Token node
      (0x622000001450)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'void'}
      			  Line: 38
      			Indent: 1
      
      }

    PrintNode::
      {
      Token node
      (0x6220000015d0)::::::::::::::::
      		  left_child: 0x622000001540
      		 right_child: 0x622000001630
      		        type: STATEMENT | {';'}
      			  Line: 40
      			Indent: 14
      
      }

    PrintNode::
      {
      Token node
      (0x622000001540)::::::::::::::::
      		  left_child: 0x6220000015a0
      		 right_child: (nil)
      		        type: NATIVE_FUNCTION | {'fout'}
      			  Line: 40
      			Indent: 5
      
      }

    PrintNode::
      {
      Token node
      (0x6220000015a0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'4'}
      			  Line: 40
      			Indent: 13
      
      }

    PrintNode::
      {
      Token node
      (0x622000001630)::::::::::::::::
      		  left_child: 0x622000001600
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      			  Line: 41
      			Indent: 11
      
      }

    PrintNode::
      {
      Token node
      (0x622000001600)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: INSTRUCTION | {'return'}
      			  Line: 41
      			Indent: 5
      
      }

    }

  Token token
  (0x622000001420)::::::::::::::::
  		  left_child: 0x6220000002b0
  		 right_child: 0x622000001660
  		        type: STATEMENT | {']'}
  			  Line: 36
  			Indent: 5
  
  Token token
  (0x6220000002b0)::::::::::::::::
  		  left_child: 0x622000000250
  		 right_child: 0x6220000003d0
  		        type: FUNCTION | {')'}
  			  Line: 3
  			Indent: 13
  
  Token token
  (0x622000000220)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: FUNCTION_RET_TYPE | {'double'}
  			  Line: 3
  			Indent: 1
  
  Token token
  (0x6220000003d0)::::::::::::::::
  		  left_child: 0x622000000310
  		 right_child: 0x6220000004c0
  		        type: STATEMENT | {';'}
  			  Line: 5
  			Indent: 17
  
  Token token
  (0x622000000310)::::::::::::::::
  		  left_child: 0x622000000340
  		 right_child: 0x6220000003a0
  		        type: INITIALIZATOR | {'var'}
  			  Line: 5
  			Indent: 5
  
  Token token
  (0x622000000340)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'main'}
  			  Line: 5
  			Indent: 9
  
  Token token
  (0x6220000003a0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'3'}
  			  Line: 5
  			Indent: 16
  
  Token token
  (0x6220000004c0)::::::::::::::::
  		  left_child: 0x622000000400
  		 right_child: 0x6220000005b0
  		        type: STATEMENT | {';'}
  			  Line: 9
  			Indent: 14
  
  Token token
  (0x622000000400)::::::::::::::::
  		  left_child: 0x622000000430
  		 right_child: 0x622000000490
  		        type: INITIALIZATOR | {'var'}
  			  Line: 9
  			Indent: 5
  
  Token token
  (0x622000000430)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'y'}
  			  Line: 9
  			Indent: 9
  
  Token token
  (0x622000000490)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'4'}
  			  Line: 9
  			Indent: 13
  
  Token token
  (0x6220000005b0)::::::::::::::::
  		  left_child: 0x6220000004f0
  		 right_child: 0x6220000006a0
  		        type: STATEMENT | {';'}
  			  Line: 10
  			Indent: 14
  
  Token token
  (0x6220000004f0)::::::::::::::::
  		  left_child: 0x622000000520
  		 right_child: 0x622000000580
  		        type: INITIALIZATOR | {'var'}
  			  Line: 10
  			Indent: 5
  
  Token token
  (0x622000000520)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'z'}
  			  Line: 10
  			Indent: 9
  
  Token token
  (0x622000000580)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'5'}
  			  Line: 10
  			Indent: 13
  
  Token token
  (0x6220000006a0)::::::::::::::::
  		  left_child: 0x6220000005e0
  		 right_child: 0x622000000700
  		        type: STATEMENT | {';'}
  			  Line: 11
  			Indent: 13
  
  Token token
  (0x6220000005e0)::::::::::::::::
  		  left_child: 0x622000000610
  		 right_child: 0x622000000670
  		        type: INITIALIZATOR | {'var'}
  			  Line: 11
  			Indent: 5
  
  Token token
  (0x622000000610)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'x'}
  			  Line: 11
  			Indent: 9
  
  Token token
  (0x622000000670)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'0'}
  			  Line: 11
  			Indent: 12
  
  Token token
  (0x622000000700)::::::::::::::::
  		  left_child: 0x6220000006d0
  		 right_child: 0x622000000c70
  		        type: STATEMENT | {'('}
  			  Line: 13
  			Indent: 8
  
  Token token
  (0x6220000006d0)::::::::::::::::
  		  left_child: 0x622000000730
  		 right_child: 0x622000000c10
  		        type: INSTRUCTION | {'if'}
  			  Line: 13
  			Indent: 5
  
  Token token
  (0x622000000730)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'10'}
  			  Line: 13
  			Indent: 9
  
  Token token
  (0x622000000c10)::::::::::::::::
  		  left_child: 0x622000000880
  		 right_child: (nil)
  		        type: STATEMENT | {']'}
  			  Line: 20
  			Indent: 5
  
  Token token
  (0x622000000880)::::::::::::::::
  		  left_child: 0x6220000007c0
  		 right_child: 0x622000000a00
  		        type: STATEMENT | {';'}
  			  Line: 15
  			Indent: 15
  
  Token token
  (0x6220000007c0)::::::::::::::::
  		  left_child: 0x6220000007f0
  		 right_child: 0x622000000850
  		        type: INITIALIZATOR | {'var'}
  			  Line: 15
  			Indent: 6
  
  Token token
  (0x6220000007f0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'x'}
  			  Line: 15
  			Indent: 10
  
  Token token
  (0x622000000850)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'5'}
  			  Line: 15
  			Indent: 14
  
  Token token
  (0x622000000a00)::::::::::::::::
  		  left_child: 0x6220000008e0
  		 right_child: 0x622000000af0
  		        type: STATEMENT | {';'}
  			  Line: 17
  			Indent: 17
  
  Token token
  (0x6220000008e0)::::::::::::::::
  		  left_child: 0x6220000008b0
  		 right_child: 0x6220000009a0
  		        type: ASSIGMENT | {'='}
  			  Line: 17
  			Indent: 7
  
  Token token
  (0x6220000008b0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'x'}
  			  Line: 17
  			Indent: 5
  
  Token token
  (0x6220000009a0)::::::::::::::::
  		  left_child: 0x622000000940
  		 right_child: 0x6220000009d0
  		        type: OPERATOR | {'/'}
  			  Line: 17
  			Indent: 15
  
  Token token
  (0x622000000940)::::::::::::::::
  		  left_child: 0x622000000910
  		 right_child: 0x622000000970
  		        type: OPERATOR | {'*'}
  			  Line: 17
  			Indent: 11
  
  Token token
  (0x622000000910)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'5'}
  			  Line: 17
  			Indent: 9
  
  Token token
  (0x622000000970)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'7'}
  			  Line: 17
  			Indent: 13
  
  Token token
  (0x6220000009d0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'3'}
  			  Line: 17
  			Indent: 16
  
  Token token
  (0x622000000af0)::::::::::::::::
  		  left_child: 0x622000000a30
  		 right_child: 0x622000000be0
  		        type: STATEMENT | {';'}
  			  Line: 18
  			Indent: 14
  
  Token token
  (0x622000000a30)::::::::::::::::
  		  left_child: 0x622000000a60
  		 right_child: 0x622000000ac0
  		        type: INITIALIZATOR | {'var'}
  			  Line: 18
  			Indent: 5
  
  Token token
  (0x622000000a60)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'y'}
  			  Line: 18
  			Indent: 9
  
  Token token
  (0x622000000ac0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'5'}
  			  Line: 18
  			Indent: 13
  
  Token token
  (0x622000000be0)::::::::::::::::
  		  left_child: 0x622000000b20
  		 right_child: (nil)
  		        type: STATEMENT | {';'}
  			  Line: 19
  			Indent: 14
  
  Token token
  (0x622000000b20)::::::::::::::::
  		  left_child: 0x622000000b50
  		 right_child: 0x622000000bb0
  		        type: INITIALIZATOR | {'var'}
  			  Line: 19
  			Indent: 5
  
  Token token
  (0x622000000b50)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'z'}
  			  Line: 19
  			Indent: 9
  
  Token token
  (0x622000000bb0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'3'}
  			  Line: 19
  			Indent: 13
  
  Token token
  (0x622000000c70)::::::::::::::::
  		  left_child: 0x622000000c40
  		 right_child: 0x6220000010c0
  		        type: STATEMENT | {'('}
  			  Line: 22
  			Indent: 8
  
  Token token
  (0x622000000c40)::::::::::::::::
  		  left_child: 0x622000000ca0
  		 right_child: 0x622000001000
  		        type: INSTRUCTION | {'if'}
  			  Line: 22
  			Indent: 5
  
  Token token
  (0x622000000ca0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'y'}
  			  Line: 22
  			Indent: 9
  
  Token token
  (0x622000001000)::::::::::::::::
  		  left_child: 0x622000000df0
  		 right_child: (nil)
  		        type: STATEMENT | {']'}
  			  Line: 27
  			Indent: 9
  
  Token token
  (0x622000000df0)::::::::::::::::
  		  left_child: 0x622000000d30
  		 right_child: 0x622000000ee0
  		        type: STATEMENT | {';'}
  			  Line: 24
  			Indent: 19
  
  Token token
  (0x622000000d30)::::::::::::::::
  		  left_child: 0x622000000d60
  		 right_child: 0x622000000dc0
  		        type: INITIALIZATOR | {'var'}
  			  Line: 24
  			Indent: 9
  
  Token token
  (0x622000000d60)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'x'}
  			  Line: 24
  			Indent: 13
  
  Token token
  (0x622000000dc0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'10'}
  			  Line: 24
  			Indent: 17
  
  Token token
  (0x622000000ee0)::::::::::::::::
  		  left_child: 0x622000000e20
  		 right_child: 0x622000000fd0
  		        type: STATEMENT | {';'}
  			  Line: 25
  			Indent: 18
  
  Token token
  (0x622000000e20)::::::::::::::::
  		  left_child: 0x622000000e50
  		 right_child: 0x622000000eb0
  		        type: INITIALIZATOR | {'var'}
  			  Line: 25
  			Indent: 9
  
  Token token
  (0x622000000e50)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'y'}
  			  Line: 25
  			Indent: 13
  
  Token token
  (0x622000000eb0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'2'}
  			  Line: 25
  			Indent: 17
  
  Token token
  (0x622000000fd0)::::::::::::::::
  		  left_child: 0x622000000f10
  		 right_child: (nil)
  		        type: STATEMENT | {';'}
  			  Line: 26
  			Indent: 18
  
  Token token
  (0x622000000f10)::::::::::::::::
  		  left_child: 0x622000000f40
  		 right_child: 0x622000000fa0
  		        type: INITIALIZATOR | {'var'}
  			  Line: 26
  			Indent: 9
  
  Token token
  (0x622000000f40)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'z'}
  			  Line: 26
  			Indent: 13
  
  Token token
  (0x622000000fa0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'0'}
  			  Line: 26
  			Indent: 17
  
  Token token
  (0x6220000010c0)::::::::::::::::
  		  left_child: 0x622000001030
  		 right_child: 0x622000001120
  		        type: STATEMENT | {';'}
  			  Line: 29
  			Indent: 14
  
  Token token
  (0x622000001030)::::::::::::::::
  		  left_child: 0x622000001090
  		 right_child: (nil)
  		        type: NATIVE_FUNCTION | {'fout'}
  			  Line: 29
  			Indent: 5
  
  Token token
  (0x622000001090)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'x'}
  			  Line: 29
  			Indent: 13
  
  Token token
  (0x622000001120)::::::::::::::::
  		  left_child: 0x622000001180
  		 right_child: 0x622000001360
  		        type: STATEMENT | {'('}
  			  Line: 31
  			Indent: 15
  
  Token token
  (0x622000001180)::::::::::::::::
  		  left_child: 0x6220000010f0
  		 right_child: (nil)
  		        type: CALL | {';'}
  			  Line: 31
  			Indent: 17
  
  Token token
  (0x622000001360)::::::::::::::::
  		  left_child: 0x6220000011e0
  		 right_child: 0x6220000013f0
  		        type: STATEMENT | {';'}
  			  Line: 33
  			Indent: 20
  
  Token token
  (0x6220000011e0)::::::::::::::::
  		  left_child: 0x6220000011b0
  		 right_child: 0x622000001240
  		        type: ASSIGMENT | {'='}
  			  Line: 33
  			Indent: 7
  
  Token token
  (0x6220000011b0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: VARIABLE | {'x'}
  			  Line: 33
  			Indent: 5
  
  Token token
  (0x622000001240)::::::::::::::::
  		  left_child: 0x622000001210
  		 right_child: 0x6220000012d0
  		        type: OPERATOR | {'*'}
  			  Line: 33
  			Indent: 11
  
  Token token
  (0x622000001210)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'1'}
  			  Line: 33
  			Indent: 9
  
  Token token
  (0x6220000012d0)::::::::::::::::
  		  left_child: 0x6220000012a0
  		 right_child: 0x622000001300
  		        type: OPERATOR | {'+'}
  			  Line: 33
  			Indent: 16
  
  Token token
  (0x6220000012a0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'4'}
  			  Line: 33
  			Indent: 14
  
  Token token
  (0x622000001300)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'5'}
  			  Line: 33
  			Indent: 18
  
  Token token
  (0x6220000013f0)::::::::::::::::
  		  left_child: 0x622000001390
  		 right_child: (nil)
  		        type: STATEMENT | {';'}
  			  Line: 35
  			Indent: 13
  
  Token token
  (0x622000001390)::::::::::::::::
  		  left_child: 0x6220000013c0
  		 right_child: (nil)
  		        type: INSTRUCTION | {'return'}
  			  Line: 35
  			Indent: 5
  
  Token token
  (0x6220000013c0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'0'}
  			  Line: 35
  			Indent: 12
  
  Token token
  (0x622000001660)::::::::::::::::
  		  left_child: 0x6220000014e0
  		 right_child: (nil)
  		        type: STATEMENT | {']'}
  			  Line: 42
  			Indent: 5
  
  Token token
  (0x6220000014e0)::::::::::::::::
  		  left_child: 0x622000001480
  		 right_child: 0x6220000015d0
  		        type: FUNCTION | {')'}
  			  Line: 38
  			Indent: 17
  
  Token token
  (0x622000001450)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: FUNCTION_RET_TYPE | {'void'}
  			  Line: 38
  			Indent: 1
  
  Token token
  (0x6220000015d0)::::::::::::::::
  		  left_child: 0x622000001540
  		 right_child: 0x622000001630
  		        type: STATEMENT | {';'}
  			  Line: 40
  			Indent: 14
  
  Token token
  (0x622000001540)::::::::::::::::
  		  left_child: 0x6220000015a0
  		 right_child: (nil)
  		        type: NATIVE_FUNCTION | {'fout'}
  			  Line: 40
  			Indent: 5
  
  Token token
  (0x6220000015a0)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: CONSTANT | {'4'}
  			  Line: 40
  			Indent: 13
  
  Token token
  (0x622000001630)::::::::::::::::
  		  left_child: 0x622000001600
  		 right_child: (nil)
  		        type: STATEMENT | {';'}
  			  Line: 41
  			Indent: 11
  
  Token token
  (0x622000001600)::::::::::::::::
  		  left_child: (nil)
  		 right_child: (nil)
  		        type: INSTRUCTION | {'return'}
  			  Line: 41
  			Indent: 5
  
  LOG FREE(kill): {0x615000000a80} - will be freed from main:56, at ./src/main.cpp:56
  }

*********************************************************************
		Log Successfuly ended, on Fri Dec 16 22:17:33 2022
*********************************************************************
