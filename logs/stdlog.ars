Tue Dec 13 18:59:33 2022

main::
  {
  LOG CALLOC:     {0x559fc4074310} = calloc (324, 1 = 324) from GetSrcFile:27, at ./ATC/Buffer/my_buffer.cpp:27
  Tokenizer::
    {
    LOG CALLOC:     {0x559fc4074460} = calloc (20, 40 = 800) from Tokenizer:56, at ./src/LexicalAnalysis.cpp:56
    LOG CALLOC:     {0x559fc4074790} = calloc (16, 8 = 128) from Tokenizer:62, at ./src/LexicalAnalysis.cpp:62
    BufferCtor::
      {

      BufferCtor:299 returned SUCCESS (return 0;)
      }

    GetTokenValue::
      {
      	temp: 'f'
      }

    GetTokenValue::
      {
      	temp: 'v'
      }

    GetTokenValue::
      {
      	temp: 'h'
      }

    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'v'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '3'
      }

    GetTokenValue::
      {
      	temp: '*'
      }

    GetTokenValue::
      {
      	temp: '5'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'v'
      }

    GetTokenValue::
      {
      	temp: 'y'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '0'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'd'
      }

    GetTokenValue::
      {
      	temp: 'm'
      }

    LOG REALLOC:     {0x559fc4074460} -> {0x559fc40748a0} = realloc (new size 1600, old size 808) from Tokenizer:97, at ./src/LexicalAnalysis.cpp:97
    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: '{'
      }

    GetTokenValue::
      {
      	temp: 'i'
      }

    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: 'y'
      }

    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: '{'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '4'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '1'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: '}'
      }

    GetTokenValue::
      {
      	temp: 'e'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    LOG REALLOC:     {0x559fc40748a0} -> {0x559fc4075320} = realloc (new size 3200, old size 1608) from Tokenizer:97, at ./src/LexicalAnalysis.cpp:97
    GetTokenValue::
      {
      	temp: '2'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'f'
      }

    GetTokenValue::
      {
      	temp: '<'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'h'
      }

    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '1'
      }

    GetTokenValue::
      {
      	temp: '*'
      }

    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: '4'
      }

    GetTokenValue::
      {
      	temp: '+'
      }

    GetTokenValue::
      {
      	temp: '5'
      }

    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'r'
      }

    GetTokenValue::
      {
      	temp: 'y'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: '}'
      }

    GetTokenValue::
      {
      	temp: 'v'
      }

    GetTokenValue::
      {
      	temp: 'h'
      }

    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: '{'
      }

    GetTokenValue::
      {
      	temp: 'f'
      }

    GetTokenValue::
      {
      	temp: '<'
      }

    GetTokenValue::
      {
      	temp: '1'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'r'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: '}'
      }

    LOG REALLOC:     {0x559fc4075320} -> {0x559fc4075320} = realloc (new size 3040, old size 3208) from Tokenizer:153, at ./src/LexicalAnalysis.cpp:153
    LOG REALLOC:     {0x559fc4074790} -> {0x559fc4074790} = realloc (new size 32, old size 136) from Tokenizer:156, at ./src/LexicalAnalysis.cpp:156
    	number_of_tokens: 76
    	i: 0
    Token program->token_arr + i
    (0x559fc4075320)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'func'}
    
    	i: 1
    Token program->token_arr + i
    (0x559fc4075348)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: FUNCTION_RET_TYPE | {'void'}
    
    	i: 2
    Token program->token_arr + i
    (0x559fc4075370)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'helloworld'}
    
    	i: 3
    Token program->token_arr + i
    (0x559fc4075398)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    
    	i: 4
    Token program->token_arr + i
    (0x559fc40753c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    
    	i: 5
    Token program->token_arr + i
    (0x559fc40753e8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    
    	i: 6
    Token program->token_arr + i
    (0x559fc4075410)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    
    	i: 7
    Token program->token_arr + i
    (0x559fc4075438)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    
    	i: 8
    Token program->token_arr + i
    (0x559fc4075460)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    
    	i: 9
    Token program->token_arr + i
    (0x559fc4075488)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'30'}
    
    	i: 10
    Token program->token_arr + i
    (0x559fc40754b0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'*'}
    
    	i: 11
    Token program->token_arr + i
    (0x559fc40754d8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'56'}
    
    	i: 12
    Token program->token_arr + i
    (0x559fc4075500)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    
    	i: 13
    Token program->token_arr + i
    (0x559fc4075528)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}
    
    	i: 14
    Token program->token_arr + i
    (0x559fc4075550)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'y'}
    
    	i: 15
    Token program->token_arr + i
    (0x559fc4075578)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    
    	i: 16
    Token program->token_arr + i
    (0x559fc40755a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'0'}
    
    	i: 17
    Token program->token_arr + i
    (0x559fc40755c8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    
    	i: 18
    Token program->token_arr + i
    (0x559fc40755f0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: FUNCTION_RET_TYPE | {'double'}
    
    	i: 19
    Token program->token_arr + i
    (0x559fc4075618)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'main'}
    
    	i: 20
    Token program->token_arr + i
    (0x559fc4075640)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    
    	i: 21
    Token program->token_arr + i
    (0x559fc4075668)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    
    	i: 22
    Token program->token_arr + i
    (0x559fc4075690)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_OPENING_BRACKET | {'{'}
    
    	i: 23
    Token program->token_arr + i
    (0x559fc40756b8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'if'}
    
    	i: 24
    Token program->token_arr + i
    (0x559fc40756e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    
    	i: 25
    Token program->token_arr + i
    (0x559fc4075708)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'y'}
    
    	i: 26
    Token program->token_arr + i
    (0x559fc4075730)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    
    	i: 27
    Token program->token_arr + i
    (0x559fc4075758)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_OPENING_BRACKET | {'{'}
    
    	i: 28
    Token program->token_arr + i
    (0x559fc4075780)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    
    	i: 29
    Token program->token_arr + i
    (0x559fc40757a8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    
    	i: 30
    Token program->token_arr + i
    (0x559fc40757d0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'45'}
    
    	i: 31
    Token program->token_arr + i
    (0x559fc40757f8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    
    	i: 32
    Token program->token_arr + i
    (0x559fc4075820)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    
    	i: 33
    Token program->token_arr + i
    (0x559fc4075848)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    
    	i: 34
    Token program->token_arr + i
    (0x559fc4075870)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'10'}
    
    	i: 35
    Token program->token_arr + i
    (0x559fc4075898)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    
    	i: 36
    Token program->token_arr + i
    (0x559fc40758c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_CLOSING_BRACKET | {'}'}
    
    	i: 37
    Token program->token_arr + i
    (0x559fc40758e8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'else'}
    
    	i: 38
    Token program->token_arr + i
    (0x559fc4075910)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    
    	i: 39
    Token program->token_arr + i
    (0x559fc4075938)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    
    	i: 40
    Token program->token_arr + i
    (0x559fc4075960)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'20'}
    
    	i: 41
    Token program->token_arr + i
    (0x559fc4075988)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    
    	i: 42
    Token program->token_arr + i
    (0x559fc40759b0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'fout'}
    
    	i: 43
    Token program->token_arr + i
    (0x559fc40759d8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'<'}
    
    	i: 44
    Token program->token_arr + i
    (0x559fc4075a00)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    
    	i: 45
    Token program->token_arr + i
    (0x559fc4075a28)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    
    	i: 46
    Token program->token_arr + i
    (0x559fc4075a50)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'helloworld'}
    
    	i: 47
    Token program->token_arr + i
    (0x559fc4075a78)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    
    	i: 48
    Token program->token_arr + i
    (0x559fc4075aa0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    
    	i: 49
    Token program->token_arr + i
    (0x559fc4075ac8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    
    	i: 50
    Token program->token_arr + i
    (0x559fc4075af0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}
    
    	i: 51
    Token program->token_arr + i
    (0x559fc4075b18)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}
    
    	i: 52
    Token program->token_arr + i
    (0x559fc4075b40)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'1'}
    
    	i: 53
    Token program->token_arr + i
    (0x559fc4075b68)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'*'}
    
    	i: 54
    Token program->token_arr + i
    (0x559fc4075b90)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    
    	i: 55
    Token program->token_arr + i
    (0x559fc4075bb8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'4'}
    
    	i: 56
    Token program->token_arr + i
    (0x559fc4075be0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'+'}
    
    	i: 57
    Token program->token_arr + i
    (0x559fc4075c08)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'5'}
    
    	i: 58
    Token program->token_arr + i
    (0x559fc4075c30)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    
    	i: 59
    Token program->token_arr + i
    (0x559fc4075c58)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    
    	i: 60
    Token program->token_arr + i
    (0x559fc4075c80)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'return'}
    
    	i: 61
    Token program->token_arr + i
    (0x559fc4075ca8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'y'}
    
    	i: 62
    Token program->token_arr + i
    (0x559fc4075cd0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    
    	i: 63
    Token program->token_arr + i
    (0x559fc4075cf8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_CLOSING_BRACKET | {'}'}
    
    	i: 64
    Token program->token_arr + i
    (0x559fc4075d20)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: FUNCTION_RET_TYPE | {'void'}
    
    	i: 65
    Token program->token_arr + i
    (0x559fc4075d48)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'helloworld'}
    
    	i: 66
    Token program->token_arr + i
    (0x559fc4075d70)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}
    
    	i: 67
    Token program->token_arr + i
    (0x559fc4075d98)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}
    
    	i: 68
    Token program->token_arr + i
    (0x559fc4075dc0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_OPENING_BRACKET | {'{'}
    
    	i: 69
    Token program->token_arr + i
    (0x559fc4075de8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'fout'}
    
    	i: 70
    Token program->token_arr + i
    (0x559fc4075e10)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'<'}
    
    	i: 71
    Token program->token_arr + i
    (0x559fc4075e38)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'101'}
    
    	i: 72
    Token program->token_arr + i
    (0x559fc4075e60)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    
    	i: 73
    Token program->token_arr + i
    (0x559fc4075e88)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'return'}
    
    	i: 74
    Token program->token_arr + i
    (0x559fc4075eb0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}
    
    	i: 75
    Token program->token_arr + i
    (0x559fc4075ed8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_CLOSING_BRACKET | {'}'}
    
    }

  GetG::
    {
    LOG CALLOC:     {0x559fc40748e0} = calloc (10, 8 = 80) from VarTabelCtor:130, at ./src/Tabels.cpp:130
    LOG CALLOC:     {0x559fc4074940} = calloc (10, 8 = 80) from FuncTabelCtor:20, at ./src/Tabels.cpp:20
    LOG CALLOC:     {0x559fc40749a0} = calloc (1, 40 = 40) from MakeFuncLabel:46, at ./src/../src/SyntaxAnalysisUtils_.ars:46
    #TODO Check this place to improve it (./src/SyntaxAnalysis.cpp:266)
Change to  AddVarLabel
    Change to  AddVarLabel
    MakeVarLabel::
      {
      LOG CALLOC:     {0x559fc4074de0} = calloc (1, 8 = 8) from MakeVarLabel:100, at ./src/../src/SyntaxAnalysisUtils_.ars:100
      }

    GetE::
      {
      GetT::
        {
        GetPower::
          {
          GetP::
            {
            GetN::
              {
              Token result
              (0x559fc4075488)::::::::::::::::
              		  left_child: (nil)
              		 right_child: (nil)
              		        type: CONSTANT | {'30'}
              
              }

            }

          }

        Token node
        (0x559fc4075488)::::::::::::::::
        		  left_child: (nil)
        		 right_child: (nil)
        		        type: CONSTANT | {'30'}
        
        Token token
        (0x559fc40754b0)::::::::::::::::
        		  left_child: (nil)
        		 right_child: (nil)
        		        type: OPERATOR | {'*'}
        
        GetPower::
          {
          GetP::
            {
            GetN::
              {
              Token result
              (0x559fc40754d8)::::::::::::::::
              		  left_child: (nil)
              		 right_child: (nil)
              		        type: CONSTANT | {'56'}
              
              }

            }

          }

        }

      }

    #TODO Check this place to improve it (./src/SyntaxAnalysis.cpp:266)
Change to  AddVarLabel
    Change to  AddVarLabel
    MakeVarLabel::
      {
      LOG CALLOC:     {0x559fc4074e00} = calloc (1, 8 = 8) from MakeVarLabel:100, at ./src/../src/SyntaxAnalysisUtils_.ars:100
      }

    GetE::
      {
      GetT::
        {
        GetPower::
          {
          GetP::
            {
            GetN::
              {
              Token result
              (0x559fc40755a0)::::::::::::::::
              		  left_child: (nil)
              		 right_child: (nil)
              		        type: CONSTANT | {'0'}
              
              }

            }

          }

        Token node
        (0x559fc40755a0)::::::::::::::::
        		  left_child: (nil)
        		 right_child: (nil)
        		        type: CONSTANT | {'0'}
        
        }

      }

    GetFunction::
      {
      LOG CALLOC:     {0x559fc4074e20} = calloc (1, 40 = 40) from MakeFuncLabel:46, at ./src/../src/SyntaxAnalysisUtils_.ars:46
      GetBlock::
        {
        GetStatement::
          {
          GetInstruction::
            {
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x559fc4075708)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: VARIABLE | {'y'}
                      
                      }

                    }

                  }

                Token node
                (0x559fc4075708)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: VARIABLE | {'y'}
                
                }

              }

            GetStatement::
              {
              GetBlock::
                {
                GetStatement::
                  {
                  GetStatement::
                    {
                    GetAssigment::
                      {
                      GetE::
                        {
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x559fc40757d0)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'45'}
                                
                                }

                              }

                            }

                          Token node
                          (0x559fc40757d0)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'45'}
                          
                          }

                        }

                      }

                    }

                  }

                GetStatement::
                  {
                  GetStatement::
                    {
                    GetAssigment::
                      {
                      GetE::
                        {
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x559fc4075870)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'10'}
                                
                                }

                              }

                            }

                          Token node
                          (0x559fc4075870)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'10'}
                          
                          }

                        }

                      }

                    }

                  }

                GetStatement::
                  {
                  }

                }

              }

            GetStatement::
              {
              GetStatement::
                {
                GetAssigment::
                  {
                  GetE::
                    {
                    GetT::
                      {
                      GetPower::
                        {
                        GetP::
                          {
                          GetN::
                            {
                            Token result
                            (0x559fc4075960)::::::::::::::::
                            		  left_child: (nil)
                            		 right_child: (nil)
                            		        type: CONSTANT | {'20'}
                            
                            }

                          }

                        }

                      Token node
                      (0x559fc4075960)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'20'}
                      
                      }

                    }

                  }

                }

              }

            }

          }

        GetStatement::
          {
          GetInstruction::
            {
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x559fc4075a00)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: VARIABLE | {'x'}
                      
                      }

                    }

                  }

                Token node
                (0x559fc4075a00)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: VARIABLE | {'x'}
                
                }

              }

            }

          }

        GetStatement::
          {
          GetStatement::
            {
            NewToken::
              {
              LOG CALLOC:     {0x559fc4074e50} = calloc (1, 40 = 40) from NewToken:10, at ./src/Token.cpp:10
              }

            }

          }

        GetStatement::
          {
          GetStatement::
            {
            GetAssigment::
              {
              GetE::
                {
                GetT::
                  {
                  GetPower::
                    {
                    GetP::
                      {
                      GetN::
                        {
                        Token result
                        (0x559fc4075b40)::::::::::::::::
                        		  left_child: (nil)
                        		 right_child: (nil)
                        		        type: CONSTANT | {'1'}
                        
                        }

                      }

                    }

                  Token node
                  (0x559fc4075b40)::::::::::::::::
                  		  left_child: (nil)
                  		 right_child: (nil)
                  		        type: CONSTANT | {'1'}
                  
                  Token token
                  (0x559fc4075b68)::::::::::::::::
                  		  left_child: (nil)
                  		 right_child: (nil)
                  		        type: OPERATOR | {'*'}
                  
                  GetPower::
                    {
                    GetP::
                      {
                      GetE::
                        {
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x559fc4075bb8)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'4'}
                                
                                }

                              }

                            }

                          Token node
                          (0x559fc4075bb8)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'4'}
                          
                          }

                        Token token
                        (0x559fc4075be0)::::::::::::::::
                        		  left_child: (nil)
                        		 right_child: (nil)
                        		        type: OPERATOR | {'+'}
                        
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x559fc4075c08)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'5'}
                                
                                }

                              }

                            }

                          Token node
                          (0x559fc4075c08)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'5'}
                          
                          }

                        }

                      }

                    }

                  }

                }

              }

            }

          }

        GetStatement::
          {
          GetInstruction::
            {
            }

          }

        }

      GetE::
        {
        GetT::
          {
          GetPower::
            {
            GetP::
              {
              GetN::
                {
                Token result
                (0x559fc4075ca8)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: VARIABLE | {'y'}
                
                }

              }

            }

          Token node
          (0x559fc4075ca8)::::::::::::::::
          		  left_child: (nil)
          		 right_child: (nil)
          		        type: VARIABLE | {'y'}
          
          }

        }

      }

    GetFunction::
      {
      LOG CALLOC:     {0x559fc4074e80} = calloc (1, 40 = 40) from MakeFuncLabel:46, at ./src/../src/SyntaxAnalysisUtils_.ars:46
      GetBlock::
        {
        GetStatement::
          {
          GetInstruction::
            {
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x559fc4075e38)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'101'}
                      
                      }

                    }

                  }

                Token node
                (0x559fc4075e38)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: CONSTANT | {'101'}
                
                }

              }

            }

          }

        GetStatement::
          {
          GetInstruction::
            {
            }

          }

        }

      }

    }

  MakeImg::
    {
    PrintNode::
      {
      Token node
      (0x559fc4075500)::::::::::::::::
      		  left_child: 0x559fc4075410
      		 right_child: 0x559fc40755c8
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075410)::::::::::::::::
      		  left_child: 0x559fc4075438
      		 right_child: 0x559fc40754b0
      		        type: INITIALIZATOR | {'var'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075410)::::::::::::::::
      		  left_child: 0x559fc4075438
      		 right_child: 0x559fc40754b0
      		        type: INITIALIZATOR | {'var'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075438)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075438)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40754b0)::::::::::::::::
      		  left_child: 0x559fc4075488
      		 right_child: 0x559fc40754d8
      		        type: OPERATOR | {'*'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40754b0)::::::::::::::::
      		  left_child: 0x559fc4075488
      		 right_child: 0x559fc40754d8
      		        type: OPERATOR | {'*'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075488)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'30'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075488)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'30'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40754d8)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'56'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40754d8)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'56'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40755c8)::::::::::::::::
      		  left_child: 0x559fc4075528
      		 right_child: 0x559fc4075cf8
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40755c8)::::::::::::::::
      		  left_child: 0x559fc4075528
      		 right_child: 0x559fc4075cf8
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075528)::::::::::::::::
      		  left_child: 0x559fc4075550
      		 right_child: 0x559fc40755a0
      		        type: INITIALIZATOR | {'var'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075528)::::::::::::::::
      		  left_child: 0x559fc4075550
      		 right_child: 0x559fc40755a0
      		        type: INITIALIZATOR | {'var'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075550)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075550)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40755a0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'0'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40755a0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'0'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075cf8)::::::::::::::::
      		  left_child: 0x559fc4075690
      		 right_child: 0x559fc4075ed8
      		        type: STATEMENT | {']'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075cf8)::::::::::::::::
      		  left_child: 0x559fc4075690
      		 right_child: 0x559fc4075ed8
      		        type: STATEMENT | {']'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075690)::::::::::::::::
      		  left_child: 0x559fc4075618
      		 right_child: 0x559fc40756e0
      		        type: FUNCTION | {'['}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075690)::::::::::::::::
      		  left_child: 0x559fc4075618
      		 right_child: 0x559fc40756e0
      		        type: FUNCTION | {'['}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075618)::::::::::::::::
      		  left_child: (nil)
      		 right_child: 0x559fc40755f0
      		        type: NAME | {'main'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075618)::::::::::::::::
      		  left_child: (nil)
      		 right_child: 0x559fc40755f0
      		        type: NAME | {'main'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40755f0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'double'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40755f0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'double'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40756e0)::::::::::::::::
      		  left_child: 0x559fc40756b8
      		 right_child: 0x559fc4075a28
      		        type: STATEMENT | {'('}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40756e0)::::::::::::::::
      		  left_child: 0x559fc40756b8
      		 right_child: 0x559fc4075a28
      		        type: STATEMENT | {'('}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40756b8)::::::::::::::::
      		  left_child: 0x559fc4075708
      		 right_child: 0x559fc40758e8
      		        type: INSTRUCTION | {'if'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40756b8)::::::::::::::::
      		  left_child: 0x559fc4075708
      		 right_child: 0x559fc40758e8
      		        type: INSTRUCTION | {'if'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075708)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075708)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40758e8)::::::::::::::::
      		  left_child: 0x559fc40757f8
      		 right_child: 0x559fc4075988
      		        type: INSTRUCTION | {'else'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40758e8)::::::::::::::::
      		  left_child: 0x559fc40757f8
      		 right_child: 0x559fc4075988
      		        type: INSTRUCTION | {'else'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40757f8)::::::::::::::::
      		  left_child: 0x559fc40757a8
      		 right_child: 0x559fc4075898
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40757f8)::::::::::::::::
      		  left_child: 0x559fc40757a8
      		 right_child: 0x559fc4075898
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40757a8)::::::::::::::::
      		  left_child: 0x559fc4075780
      		 right_child: 0x559fc40757d0
      		        type: ASSIGMENT | {'='}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40757a8)::::::::::::::::
      		  left_child: 0x559fc4075780
      		 right_child: 0x559fc40757d0
      		        type: ASSIGMENT | {'='}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075780)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075780)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40757d0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'45'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40757d0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'45'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075898)::::::::::::::::
      		  left_child: 0x559fc4075848
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075898)::::::::::::::::
      		  left_child: 0x559fc4075848
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075848)::::::::::::::::
      		  left_child: 0x559fc4075820
      		 right_child: 0x559fc4075870
      		        type: ASSIGMENT | {'='}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075848)::::::::::::::::
      		  left_child: 0x559fc4075820
      		 right_child: 0x559fc4075870
      		        type: ASSIGMENT | {'='}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075820)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075820)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075870)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'10'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075870)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'10'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075988)::::::::::::::::
      		  left_child: 0x559fc4075938
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075988)::::::::::::::::
      		  left_child: 0x559fc4075938
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075938)::::::::::::::::
      		  left_child: 0x559fc4075910
      		 right_child: 0x559fc4075960
      		        type: ASSIGMENT | {'='}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075938)::::::::::::::::
      		  left_child: 0x559fc4075910
      		 right_child: 0x559fc4075960
      		        type: ASSIGMENT | {'='}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075910)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075910)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075960)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'20'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075960)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'20'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075a28)::::::::::::::::
      		  left_child: 0x559fc40759b0
      		 right_child: 0x559fc4075a78
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075a28)::::::::::::::::
      		  left_child: 0x559fc40759b0
      		 right_child: 0x559fc4075a78
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40759b0)::::::::::::::::
      		  left_child: 0x559fc4075a00
      		 right_child: (nil)
      		        type: INSTRUCTION | {'fout'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc40759b0)::::::::::::::::
      		  left_child: 0x559fc4075a00
      		 right_child: (nil)
      		        type: INSTRUCTION | {'fout'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075a00)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075a00)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075a78)::::::::::::::::
      		  left_child: 0x559fc4074e50
      		 right_child: 0x559fc4075c58
      		        type: STATEMENT | {'('}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075a78)::::::::::::::::
      		  left_child: 0x559fc4074e50
      		 right_child: 0x559fc4075c58
      		        type: STATEMENT | {'('}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4074e50)::::::::::::::::
      		  left_child: 0x559fc4075a50
      		 right_child: (nil)
      		        type: CALL | {' '}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4074e50)::::::::::::::::
      		  left_child: 0x559fc4075a50
      		 right_child: (nil)
      		        type: CALL | {' '}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075a50)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: NAME | {'helloworld'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075a50)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: NAME | {'helloworld'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075c58)::::::::::::::::
      		  left_child: 0x559fc4075b18
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075c58)::::::::::::::::
      		  left_child: 0x559fc4075b18
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075b18)::::::::::::::::
      		  left_child: 0x559fc4075af0
      		 right_child: 0x559fc4075b68
      		        type: ASSIGMENT | {'='}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075b18)::::::::::::::::
      		  left_child: 0x559fc4075af0
      		 right_child: 0x559fc4075b68
      		        type: ASSIGMENT | {'='}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075af0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075af0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075b68)::::::::::::::::
      		  left_child: 0x559fc4075b40
      		 right_child: 0x559fc4075be0
      		        type: OPERATOR | {'*'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075b68)::::::::::::::::
      		  left_child: 0x559fc4075b40
      		 right_child: 0x559fc4075be0
      		        type: OPERATOR | {'*'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075b40)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'1'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075b40)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'1'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075be0)::::::::::::::::
      		  left_child: 0x559fc4075bb8
      		 right_child: 0x559fc4075c08
      		        type: OPERATOR | {'+'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075be0)::::::::::::::::
      		  left_child: 0x559fc4075bb8
      		 right_child: 0x559fc4075c08
      		        type: OPERATOR | {'+'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075bb8)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'4'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075bb8)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'4'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075c08)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'5'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075c08)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'5'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075ed8)::::::::::::::::
      		  left_child: 0x559fc4075dc0
      		 right_child: (nil)
      		        type: STATEMENT | {']'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075ed8)::::::::::::::::
      		  left_child: 0x559fc4075dc0
      		 right_child: (nil)
      		        type: STATEMENT | {']'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075dc0)::::::::::::::::
      		  left_child: 0x559fc4075d48
      		 right_child: 0x559fc4075e60
      		        type: FUNCTION | {'['}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075dc0)::::::::::::::::
      		  left_child: 0x559fc4075d48
      		 right_child: 0x559fc4075e60
      		        type: FUNCTION | {'['}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075d48)::::::::::::::::
      		  left_child: (nil)
      		 right_child: 0x559fc4075d20
      		        type: NAME | {'helloworld'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075d48)::::::::::::::::
      		  left_child: (nil)
      		 right_child: 0x559fc4075d20
      		        type: NAME | {'helloworld'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075d20)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'void'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075d20)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'void'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075e60)::::::::::::::::
      		  left_child: 0x559fc4075de8
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075e60)::::::::::::::::
      		  left_child: 0x559fc4075de8
      		 right_child: (nil)
      		        type: STATEMENT | {';'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075de8)::::::::::::::::
      		  left_child: 0x559fc4075e38
      		 right_child: (nil)
      		        type: INSTRUCTION | {'fout'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075de8)::::::::::::::::
      		  left_child: 0x559fc4075e38
      		 right_child: (nil)
      		        type: INSTRUCTION | {'fout'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075e38)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'101'}
      
      }

    PrintNode::
      {
      Token node
      (0x559fc4075e38)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'101'}
      
      }

    }


  OpenAsmFile:368 returned SUCCESS (return 0;)
  LOG CALLOC:     {0x559fc4074ef0} = calloc (10, 8 = 80) from VarTabelCtor:130, at ./src/Tabels.cpp:130
  AddToAsm::
    {
    Token token
    (0x559fc4075500)::::::::::::::::
    		  left_child: 0x559fc4075410
    		 right_child: 0x559fc40755c8
    		        type: STATEMENT | {';'}
    
    AddToAsm::
      {
      Token token
      (0x559fc4075410)::::::::::::::::
      		  left_child: 0x559fc4075438
      		 right_child: 0x559fc40754b0
      		        type: INITIALIZATOR | {'var'}
      
      LOG CALLOC:     {0x559fc4074f50} = calloc (1, 8 = 8) from AddVarLabel:199, at ./src/Tabels.cpp:199
      AddToAsm::
        {
        Token token
        (0x559fc40754b0)::::::::::::::::
        		  left_child: 0x559fc4075488
        		 right_child: 0x559fc40754d8
        		        type: OPERATOR | {'*'}
        
        AddToAsm::
          {
          Token token
          (0x559fc40754d8)::::::::::::::::
          		  left_child: (nil)
          		 right_child: (nil)
          		        type: CONSTANT | {'56'}
          
          }

        AddToAsm::
          {
          Token token
          (0x559fc4075488)::::::::::::::::
          		  left_child: (nil)
          		 right_child: (nil)
          		        type: CONSTANT | {'30'}
          
          }

        }

      }

    AddToAsm::
      {
      Token token
      (0x559fc40755c8)::::::::::::::::
      		  left_child: 0x559fc4075528
      		 right_child: 0x559fc4075cf8
      		        type: STATEMENT | {';'}
      
      AddToAsm::
        {
        Token token
        (0x559fc4075528)::::::::::::::::
        		  left_child: 0x559fc4075550
        		 right_child: 0x559fc40755a0
        		        type: INITIALIZATOR | {'var'}
        
        LOG CALLOC:     {0x559fc4074f70} = calloc (1, 8 = 8) from AddVarLabel:199, at ./src/Tabels.cpp:199
        AddToAsm::
          {
          Token token
          (0x559fc40755a0)::::::::::::::::
          		  left_child: (nil)
          		 right_child: (nil)
          		        type: CONSTANT | {'0'}
          
          }

        }

      AddToAsm::
        {
        Token token
        (0x559fc4075cf8)::::::::::::::::
        		  left_child: 0x559fc4075690
        		 right_child: 0x559fc4075ed8
        		        type: STATEMENT | {']'}
        
        AddToAsm::
          {
          Token token
          (0x559fc4075690)::::::::::::::::
          		  left_child: 0x559fc4075618
          		 right_child: 0x559fc40756e0
          		        type: FUNCTION | {'['}
          
          AddToAsm::
            {
            Token token
            (0x559fc40756e0)::::::::::::::::
            		  left_child: 0x559fc40756b8
            		 right_child: 0x559fc4075a28
            		        type: STATEMENT | {'('}
            
            AddToAsm::
              {
              Token token
              (0x559fc40756b8)::::::::::::::::
              		  left_child: 0x559fc4075708
              		 right_child: 0x559fc40758e8
              		        type: INSTRUCTION | {'if'}
              
              AddToAsm::
                {
                Token token
                (0x559fc4075708)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: VARIABLE | {'y'}
                
                }

              AddToAsm::
                {
                Token token
                (0x559fc40757f8)::::::::::::::::
                		  left_child: 0x559fc40757a8
                		 right_child: 0x559fc4075898
                		        type: STATEMENT | {';'}
                
                AddToAsm::
                  {
                  Token token
                  (0x559fc40757a8)::::::::::::::::
                  		  left_child: 0x559fc4075780
                  		 right_child: 0x559fc40757d0
                  		        type: ASSIGMENT | {'='}
                  
                  AddToAsm::
                    {
                    Token token
                    (0x559fc40757d0)::::::::::::::::
                    		  left_child: (nil)
                    		 right_child: (nil)
                    		        type: CONSTANT | {'45'}
                    
                    }

                  }

                AddToAsm::
                  {
                  Token token
                  (0x559fc4075898)::::::::::::::::
                  		  left_child: 0x559fc4075848
                  		 right_child: (nil)
                  		        type: STATEMENT | {';'}
                  
                  AddToAsm::
                    {
                    Token token
                    (0x559fc4075848)::::::::::::::::
                    		  left_child: 0x559fc4075820
                    		 right_child: 0x559fc4075870
                    		        type: ASSIGMENT | {'='}
                    
                    AddToAsm::
                      {
                      Token token
                      (0x559fc4075870)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'10'}
                      
                      }

                    }

                  }

                }

              AddToAsm::
                {
                Token token
                (0x559fc4075988)::::::::::::::::
                		  left_child: 0x559fc4075938
                		 right_child: (nil)
                		        type: STATEMENT | {';'}
                
                AddToAsm::
                  {
                  Token token
                  (0x559fc4075938)::::::::::::::::
                  		  left_child: 0x559fc4075910
                  		 right_child: 0x559fc4075960
                  		        type: ASSIGMENT | {'='}
                  
                  AddToAsm::
                    {
                    Token token
                    (0x559fc4075960)::::::::::::::::
                    		  left_child: (nil)
                    		 right_child: (nil)
                    		        type: CONSTANT | {'20'}
                    
                    }

                  }

                }

              }

            AddToAsm::
              {
              Token token
              (0x559fc4075a28)::::::::::::::::
              		  left_child: 0x559fc40759b0
              		 right_child: 0x559fc4075a78
              		        type: STATEMENT | {';'}
              
              AddToAsm::
                {
                Token token
                (0x559fc40759b0)::::::::::::::::
                		  left_child: 0x559fc4075a00
                		 right_child: (nil)
                		        type: INSTRUCTION | {'fout'}
                
                AddToAsm::
                  {
                  Token token
                  (0x559fc4075a00)::::::::::::::::
                  		  left_child: (nil)
                  		 right_child: (nil)
                  		        type: VARIABLE | {'x'}
                  
                  }

                }

              AddToAsm::
                {
                Token token
                (0x559fc4075a78)::::::::::::::::
                		  left_child: 0x559fc4074e50
                		 right_child: 0x559fc4075c58
                		        type: STATEMENT | {'('}
                
                AddToAsm::
                  {
                  Token token
                  (0x559fc4074e50)::::::::::::::::
                  		  left_child: 0x559fc4075a50
                  		 right_child: (nil)
                  		        type: CALL | {' '}
                  
                  }

                AddToAsm::
                  {
                  Token token
                  (0x559fc4075c58)::::::::::::::::
                  		  left_child: 0x559fc4075b18
                  		 right_child: (nil)
                  		        type: STATEMENT | {';'}
                  
                  AddToAsm::
                    {
                    Token token
                    (0x559fc4075b18)::::::::::::::::
                    		  left_child: 0x559fc4075af0
                    		 right_child: 0x559fc4075b68
                    		        type: ASSIGMENT | {'='}
                    
                    AddToAsm::
                      {
                      Token token
                      (0x559fc4075b68)::::::::::::::::
                      		  left_child: 0x559fc4075b40
                      		 right_child: 0x559fc4075be0
                      		        type: OPERATOR | {'*'}
                      
                      AddToAsm::
                        {
                        Token token
                        (0x559fc4075be0)::::::::::::::::
                        		  left_child: 0x559fc4075bb8
                        		 right_child: 0x559fc4075c08
                        		        type: OPERATOR | {'+'}
                        
                        AddToAsm::
                          {
                          Token token
                          (0x559fc4075c08)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'5'}
                          
                          }

                        AddToAsm::
                          {
                          Token token
                          (0x559fc4075bb8)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'4'}
                          
                          }

                        }

                      AddToAsm::
                        {
                        Token token
                        (0x559fc4075b40)::::::::::::::::
                        		  left_child: (nil)
                        		 right_child: (nil)
                        		        type: CONSTANT | {'1'}
                        
                        }

                      }

                    }

                  }

                }

              }

            }

          }

        AddToAsm::
          {
          Token token
          (0x559fc4075ed8)::::::::::::::::
          		  left_child: 0x559fc4075dc0
          		 right_child: (nil)
          		        type: STATEMENT | {']'}
          
          AddToAsm::
            {
            Token token
            (0x559fc4075dc0)::::::::::::::::
            		  left_child: 0x559fc4075d48
            		 right_child: 0x559fc4075e60
            		        type: FUNCTION | {'['}
            
            AddToAsm::
              {
              Token token
              (0x559fc4075e60)::::::::::::::::
              		  left_child: 0x559fc4075de8
              		 right_child: (nil)
              		        type: STATEMENT | {';'}
              
              AddToAsm::
                {
                Token token
                (0x559fc4075de8)::::::::::::::::
                		  left_child: 0x559fc4075e38
                		 right_child: (nil)
                		        type: INSTRUCTION | {'fout'}
                
                AddToAsm::
                  {
                  Token token
                  (0x559fc4075e38)::::::::::::::::
                  		  left_child: (nil)
                  		 right_child: (nil)
                  		        type: CONSTANT | {'101'}
                  
                  }

                }

              }

            }

          }

        }

      }

    }


  TranslateToAsm:107 returned SUCCESS (return 0;)
  #TODO Check this place to improve it (./src/main.cpp:54)
сделаю потом
  сделаю потом
  LOG FREE(kill): {0x559fc4074310} - will be freed from main:110, at ./src/main.cpp:110
  }

*********************************************************************
		Log Successfuly ended, on Tue Dec 13 18:59:34 2022
*********************************************************************
