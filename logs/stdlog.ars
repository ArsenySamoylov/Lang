Sun Dec 11 23:14:01 2022

main::
  {
  LOG CALLOC:     {0x564daeaec310} = calloc (308, 1 = 308) from GetSrcFile:27, at ../ATC/Buffer/my_buffer.cpp:27
  Tokenizer::
    {
    LOG CALLOC:     {0x564daeaec450} = calloc (20, 40 = 800) from Tokenizer:56, at ./src/LexicalAnalysis.cpp:56
    LOG CALLOC:     {0x564daeaec780} = calloc (16, 8 = 128) from Tokenizer:62, at ./src/LexicalAnalysis.cpp:62
    BufferCtor::
      {

      BufferCtor:299 returned SUCCESS (return 0;)
      }

    GetTokenValue::
      {
      	temp: 'f'
      }

    GetTokenValue::
      {
      	temp: 'v'
      }

    GetTokenValue::
      {
      	temp: 'h'
      }

    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'v'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '3'
      }

    GetTokenValue::
      {
      	temp: '*'
      }

    GetTokenValue::
      {
      	temp: '5'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'd'
      }

    GetTokenValue::
      {
      	temp: 'm'
      }

    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: '{'
      }

    GetTokenValue::
      {
      	temp: 'v'
      }

    GetTokenValue::
      {
      	temp: 'y'
      }

    LOG REALLOC:     {0x564daeaec450} -> {0x564daeaec890} = realloc (new size 1600, old size 808) from Tokenizer:97, at ./src/LexicalAnalysis.cpp:97
    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '4'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'i'
      }

    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: 'y'
      }

    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: '{'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '4'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '1'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: '}'
      }

    GetTokenValue::
      {
      	temp: 'e'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    LOG REALLOC:     {0x564daeaec890} -> {0x564daeaed320} = realloc (new size 3200, old size 1608) from Tokenizer:97, at ./src/LexicalAnalysis.cpp:97
    GetTokenValue::
      {
      	temp: '2'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'f'
      }

    GetTokenValue::
      {
      	temp: '<'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'h'
      }

    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '1'
      }

    GetTokenValue::
      {
      	temp: '*'
      }

    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: '4'
      }

    GetTokenValue::
      {
      	temp: '+'
      }

    GetTokenValue::
      {
      	temp: '5'
      }

    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'r'
      }

    GetTokenValue::
      {
      	temp: 'y'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: '}'
      }

    GetTokenValue::
      {
      	temp: 'v'
      }

    GetTokenValue::
      {
      	temp: 'h'
      }

    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: '{'
      }

    GetTokenValue::
      {
      	temp: 'f'
      }

    GetTokenValue::
      {
      	temp: '<'
      }

    GetTokenValue::
      {
      	temp: '1'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'r'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: '}'
      }

    LOG REALLOC:     {0x564daeaed320} -> {0x564daeaed320} = realloc (new size 3040, old size 3208) from Tokenizer:153, at ./src/LexicalAnalysis.cpp:153
    LOG REALLOC:     {0x564daeaec780} -> {0x564daeaec780} = realloc (new size 32, old size 136) from Tokenizer:156, at ./src/LexicalAnalysis.cpp:156
    	number_of_tokens: 76
    	i: 0
    Token program->token_arr + i
    (0x564daeaed320)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'func'}    
    	i: 1
    Token program->token_arr + i
    (0x564daeaed348)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: FUNCTION_RET_TYPE | {'void'}    
    	i: 2
    Token program->token_arr + i
    (0x564daeaed370)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'helloworld'}    
    	i: 3
    Token program->token_arr + i
    (0x564daeaed398)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}    
    	i: 4
    Token program->token_arr + i
    (0x564daeaed3c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}    
    	i: 5
    Token program->token_arr + i
    (0x564daeaed3e8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}    
    	i: 6
    Token program->token_arr + i
    (0x564daeaed410)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}    
    	i: 7
    Token program->token_arr + i
    (0x564daeaed438)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}    
    	i: 8
    Token program->token_arr + i
    (0x564daeaed460)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}    
    	i: 9
    Token program->token_arr + i
    (0x564daeaed488)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'30'}    
    	i: 10
    Token program->token_arr + i
    (0x564daeaed4b0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'*'}    
    	i: 11
    Token program->token_arr + i
    (0x564daeaed4d8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'56'}    
    	i: 12
    Token program->token_arr + i
    (0x564daeaed500)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}    
    	i: 13
    Token program->token_arr + i
    (0x564daeaed528)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: FUNCTION_RET_TYPE | {'double'}    
    	i: 14
    Token program->token_arr + i
    (0x564daeaed550)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'main'}    
    	i: 15
    Token program->token_arr + i
    (0x564daeaed578)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}    
    	i: 16
    Token program->token_arr + i
    (0x564daeaed5a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}    
    	i: 17
    Token program->token_arr + i
    (0x564daeaed5c8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_OPENING_BRACKET | {'{'}    
    	i: 18
    Token program->token_arr + i
    (0x564daeaed5f0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INITIALIZATOR | {'var'}    
    	i: 19
    Token program->token_arr + i
    (0x564daeaed618)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'y'}    
    	i: 20
    Token program->token_arr + i
    (0x564daeaed640)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}    
    	i: 21
    Token program->token_arr + i
    (0x564daeaed668)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'4'}    
    	i: 22
    Token program->token_arr + i
    (0x564daeaed690)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}    
    	i: 23
    Token program->token_arr + i
    (0x564daeaed6b8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'if'}    
    	i: 24
    Token program->token_arr + i
    (0x564daeaed6e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}    
    	i: 25
    Token program->token_arr + i
    (0x564daeaed708)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'y'}    
    	i: 26
    Token program->token_arr + i
    (0x564daeaed730)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}    
    	i: 27
    Token program->token_arr + i
    (0x564daeaed758)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_OPENING_BRACKET | {'{'}    
    	i: 28
    Token program->token_arr + i
    (0x564daeaed780)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}    
    	i: 29
    Token program->token_arr + i
    (0x564daeaed7a8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}    
    	i: 30
    Token program->token_arr + i
    (0x564daeaed7d0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'45'}    
    	i: 31
    Token program->token_arr + i
    (0x564daeaed7f8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}    
    	i: 32
    Token program->token_arr + i
    (0x564daeaed820)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}    
    	i: 33
    Token program->token_arr + i
    (0x564daeaed848)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}    
    	i: 34
    Token program->token_arr + i
    (0x564daeaed870)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'10'}    
    	i: 35
    Token program->token_arr + i
    (0x564daeaed898)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}    
    	i: 36
    Token program->token_arr + i
    (0x564daeaed8c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_CLOSING_BRACKET | {'}'}    
    	i: 37
    Token program->token_arr + i
    (0x564daeaed8e8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'else'}    
    	i: 38
    Token program->token_arr + i
    (0x564daeaed910)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}    
    	i: 39
    Token program->token_arr + i
    (0x564daeaed938)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}    
    	i: 40
    Token program->token_arr + i
    (0x564daeaed960)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'20'}    
    	i: 41
    Token program->token_arr + i
    (0x564daeaed988)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}    
    	i: 42
    Token program->token_arr + i
    (0x564daeaed9b0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'fout'}    
    	i: 43
    Token program->token_arr + i
    (0x564daeaed9d8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'<'}    
    	i: 44
    Token program->token_arr + i
    (0x564daeaeda00)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}    
    	i: 45
    Token program->token_arr + i
    (0x564daeaeda28)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}    
    	i: 46
    Token program->token_arr + i
    (0x564daeaeda50)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'helloworld'}    
    	i: 47
    Token program->token_arr + i
    (0x564daeaeda78)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}    
    	i: 48
    Token program->token_arr + i
    (0x564daeaedaa0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}    
    	i: 49
    Token program->token_arr + i
    (0x564daeaedac8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}    
    	i: 50
    Token program->token_arr + i
    (0x564daeaedaf0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'x'}    
    	i: 51
    Token program->token_arr + i
    (0x564daeaedb18)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {'='}    
    	i: 52
    Token program->token_arr + i
    (0x564daeaedb40)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'1'}    
    	i: 53
    Token program->token_arr + i
    (0x564daeaedb68)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'*'}    
    	i: 54
    Token program->token_arr + i
    (0x564daeaedb90)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}    
    	i: 55
    Token program->token_arr + i
    (0x564daeaedbb8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'4'}    
    	i: 56
    Token program->token_arr + i
    (0x564daeaedbe0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'+'}    
    	i: 57
    Token program->token_arr + i
    (0x564daeaedc08)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'5'}    
    	i: 58
    Token program->token_arr + i
    (0x564daeaedc30)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}    
    	i: 59
    Token program->token_arr + i
    (0x564daeaedc58)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}    
    	i: 60
    Token program->token_arr + i
    (0x564daeaedc80)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'return'}    
    	i: 61
    Token program->token_arr + i
    (0x564daeaedca8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'y'}    
    	i: 62
    Token program->token_arr + i
    (0x564daeaedcd0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}    
    	i: 63
    Token program->token_arr + i
    (0x564daeaedcf8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_CLOSING_BRACKET | {'}'}    
    	i: 64
    Token program->token_arr + i
    (0x564daeaedd20)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: FUNCTION_RET_TYPE | {'void'}    
    	i: 65
    Token program->token_arr + i
    (0x564daeaedd48)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: NAME | {'helloworld'}    
    	i: 66
    Token program->token_arr + i
    (0x564daeaedd70)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_OPENING_BRACKET | {'('}    
    	i: 67
    Token program->token_arr + i
    (0x564daeaedd98)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION_CLOSING_BRACKET | {')'}    
    	i: 68
    Token program->token_arr + i
    (0x564daeaeddc0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_OPENING_BRACKET | {'{'}    
    	i: 69
    Token program->token_arr + i
    (0x564daeaedde8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'fout'}    
    	i: 70
    Token program->token_arr + i
    (0x564daeaede10)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {'<'}    
    	i: 71
    Token program->token_arr + i
    (0x564daeaede38)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {'101'}    
    	i: 72
    Token program->token_arr + i
    (0x564daeaede60)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}    
    	i: 73
    Token program->token_arr + i
    (0x564daeaede88)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'return'}    
    	i: 74
    Token program->token_arr + i
    (0x564daeaedeb0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT | {';'}    
    	i: 75
    Token program->token_arr + i
    (0x564daeaeded8)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: BLOCK_CLOSING_BRACKET | {'}'}    
    }

  GetG::
    {
    LOG CALLOC:     {0x564daeaec8d0} = calloc (10, 8 = 80) from VarTabelCtor:130, at ./src/Tabels.cpp:130
    LOG CALLOC:     {0x564daeaec930} = calloc (10, 8 = 80) from FuncTabelCtor:20, at ./src/Tabels.cpp:20
    LOG CALLOC:     {0x564daeaec990} = calloc (1, 32 = 32) from MakeFuncLabel:840, at ./src/SyntaxAnalysis.cpp:840
    MakeVarLabel::
      {
      LOG CALLOC:     {0x564daeaec9c0} = calloc (1, 4 = 4) from MakeVarLabel:885, at ./src/SyntaxAnalysis.cpp:885
      }

    GetE::
      {
      GetT::
        {
        GetPower::
          {
          GetP::
            {
            GetN::
              {
              Token result
              (0x564daeaed488)::::::::::::::::
              		  left_child: (nil)
              		 right_child: (nil)
              		        type: CONSTANT | {'30'}              
              }

            }

          }

        Token node
        (0x564daeaed488)::::::::::::::::
        		  left_child: (nil)
        		 right_child: (nil)
        		        type: CONSTANT | {'30'}        
        Token token
        (0x564daeaed4b0)::::::::::::::::
        		  left_child: (nil)
        		 right_child: (nil)
        		        type: OPERATOR | {'*'}        
        GetPower::
          {
          GetP::
            {
            GetN::
              {
              Token result
              (0x564daeaed4d8)::::::::::::::::
              		  left_child: (nil)
              		 right_child: (nil)
              		        type: CONSTANT | {'56'}              
              }

            }

          }

        }

      }

    GetFunction::
      {
      LOG CALLOC:     {0x564daeaec9e0} = calloc (1, 32 = 32) from MakeFuncLabel:840, at ./src/SyntaxAnalysis.cpp:840
      GetBlock::
        {
        GetStatement::
          {
          MakeVarLabel::
            {
            LOG CALLOC:     {0x564daeaeca10} = calloc (1, 4 = 4) from MakeVarLabel:885, at ./src/SyntaxAnalysis.cpp:885
            }

          GetE::
            {
            GetT::
              {
              GetPower::
                {
                GetP::
                  {
                  GetN::
                    {
                    Token result
                    (0x564daeaed668)::::::::::::::::
                    		  left_child: (nil)
                    		 right_child: (nil)
                    		        type: CONSTANT | {'4'}                    
                    }

                  }

                }

              Token node
              (0x564daeaed668)::::::::::::::::
              		  left_child: (nil)
              		 right_child: (nil)
              		        type: CONSTANT | {'4'}              
              }

            }

          }

        GetStatement::
          {
          GetInstruction::
            {
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x564daeaed708)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: VARIABLE | {'y'}                      
                      }

                    }

                  }

                Token node
                (0x564daeaed708)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: VARIABLE | {'y'}                
                }

              }

            GetStatement::
              {
              GetBlock::
                {
                GetStatement::
                  {
                  GetStatement::
                    {
                    GetAssigment::
                      {
                      GetE::
                        {
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x564daeaed7d0)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'45'}                                
                                }

                              }

                            }

                          Token node
                          (0x564daeaed7d0)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'45'}                          
                          }

                        }

                      }

                    }

                  }

                GetStatement::
                  {
                  GetStatement::
                    {
                    GetAssigment::
                      {
                      GetE::
                        {
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x564daeaed870)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'10'}                                
                                }

                              }

                            }

                          Token node
                          (0x564daeaed870)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'10'}                          
                          }

                        }

                      }

                    }

                  }

                GetStatement::
                  {
                  }

                }

              }

            GetStatement::
              {
              GetStatement::
                {
                GetAssigment::
                  {
                  GetE::
                    {
                    GetT::
                      {
                      GetPower::
                        {
                        GetP::
                          {
                          GetN::
                            {
                            Token result
                            (0x564daeaed960)::::::::::::::::
                            		  left_child: (nil)
                            		 right_child: (nil)
                            		        type: CONSTANT | {'20'}                            
                            }

                          }

                        }

                      Token node
                      (0x564daeaed960)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'20'}                      
                      }

                    }

                  }

                }

              }

            }

          }

        GetStatement::
          {
          GetInstruction::
            {
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x564daeaeda00)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: VARIABLE | {'x'}                      
                      }

                    }

                  }

                Token node
                (0x564daeaeda00)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: VARIABLE | {'x'}                
                }

              }

            }

          }

        GetStatement::
          {
          GetStatement::
            {
            NewToken::
              {
              LOG CALLOC:     {0x564daeaeca30} = calloc (1, 40 = 40) from NewToken:10, at ./src/Token.cpp:10
              }

            }

          }

        GetStatement::
          {
          GetStatement::
            {
            GetAssigment::
              {
              GetE::
                {
                GetT::
                  {
                  GetPower::
                    {
                    GetP::
                      {
                      GetN::
                        {
                        Token result
                        (0x564daeaedb40)::::::::::::::::
                        		  left_child: (nil)
                        		 right_child: (nil)
                        		        type: CONSTANT | {'1'}                        
                        }

                      }

                    }

                  Token node
                  (0x564daeaedb40)::::::::::::::::
                  		  left_child: (nil)
                  		 right_child: (nil)
                  		        type: CONSTANT | {'1'}                  
                  Token token
                  (0x564daeaedb68)::::::::::::::::
                  		  left_child: (nil)
                  		 right_child: (nil)
                  		        type: OPERATOR | {'*'}                  
                  GetPower::
                    {
                    GetP::
                      {
                      GetE::
                        {
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x564daeaedbb8)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'4'}                                
                                }

                              }

                            }

                          Token node
                          (0x564daeaedbb8)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'4'}                          
                          }

                        Token token
                        (0x564daeaedbe0)::::::::::::::::
                        		  left_child: (nil)
                        		 right_child: (nil)
                        		        type: OPERATOR | {'+'}                        
                        GetT::
                          {
                          GetPower::
                            {
                            GetP::
                              {
                              GetN::
                                {
                                Token result
                                (0x564daeaedc08)::::::::::::::::
                                		  left_child: (nil)
                                		 right_child: (nil)
                                		        type: CONSTANT | {'5'}                                
                                }

                              }

                            }

                          Token node
                          (0x564daeaedc08)::::::::::::::::
                          		  left_child: (nil)
                          		 right_child: (nil)
                          		        type: CONSTANT | {'5'}                          
                          }

                        }

                      }

                    }

                  }

                }

              }

            }

          }

        GetStatement::
          {
          GetInstruction::
            {
            }

          }

        }

      GetE::
        {
        GetT::
          {
          GetPower::
            {
            GetP::
              {
              GetN::
                {
                Token result
                (0x564daeaedca8)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: VARIABLE | {'y'}                
                }

              }

            }

          Token node
          (0x564daeaedca8)::::::::::::::::
          		  left_child: (nil)
          		 right_child: (nil)
          		        type: VARIABLE | {'y'}          
          }

        }

      NewToken::
        {
        LOG CALLOC:     {0x564daeaeca60} = calloc (1, 40 = 40) from NewToken:10, at ./src/Token.cpp:10
        }

      NewToken::
        {
        LOG CALLOC:     {0x564daeaeca90} = calloc (1, 40 = 40) from NewToken:10, at ./src/Token.cpp:10
        }

      }

    GetFunction::
      {
      LOG CALLOC:     {0x564daeaecac0} = calloc (1, 32 = 32) from MakeFuncLabel:840, at ./src/SyntaxAnalysis.cpp:840
      GetBlock::
        {
        GetStatement::
          {
          GetInstruction::
            {
            GetE::
              {
              GetT::
                {
                GetPower::
                  {
                  GetP::
                    {
                    GetN::
                      {
                      Token result
                      (0x564daeaede38)::::::::::::::::
                      		  left_child: (nil)
                      		 right_child: (nil)
                      		        type: CONSTANT | {'101'}                      
                      }

                    }

                  }

                Token node
                (0x564daeaede38)::::::::::::::::
                		  left_child: (nil)
                		 right_child: (nil)
                		        type: CONSTANT | {'101'}                
                }

              }

            }

          }

        GetStatement::
          {
          GetInstruction::
            {
            }

          }

        }

      NewToken::
        {
        LOG CALLOC:     {0x564daeaecaf0} = calloc (1, 40 = 40) from NewToken:10, at ./src/Token.cpp:10
        }

      NewToken::
        {
        LOG CALLOC:     {0x564daeaecb20} = calloc (1, 40 = 40) from NewToken:10, at ./src/Token.cpp:10
        }

      }

    }

  MakeImg::
    {
    PrintNode::
      {
      Token node
      (0x564daeaed500)::::::::::::::::
      		  left_child: 0x564daeaed410
      		 right_child: 0x564daeaedcf8
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed410)::::::::::::::::
      		  left_child: 0x564daeaed438
      		 right_child: 0x564daeaed4b0
      		        type: INITIALIZATOR | {'var'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed410)::::::::::::::::
      		  left_child: 0x564daeaed438
      		 right_child: 0x564daeaed4b0
      		        type: INITIALIZATOR | {'var'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed438)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed438)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed4b0)::::::::::::::::
      		  left_child: 0x564daeaed488
      		 right_child: 0x564daeaed4d8
      		        type: OPERATOR | {'*'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed4b0)::::::::::::::::
      		  left_child: 0x564daeaed488
      		 right_child: 0x564daeaed4d8
      		        type: OPERATOR | {'*'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed488)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'30'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed488)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'30'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed4d8)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'56'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed4d8)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'56'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedcf8)::::::::::::::::
      		  left_child: 0x564daeaeca60
      		 right_child: 0x564daeaeded8
      		        type: FUNCTION | {'}'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedcf8)::::::::::::::::
      		  left_child: 0x564daeaeca60
      		 right_child: 0x564daeaeded8
      		        type: FUNCTION | {'}'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeca60)::::::::::::::::
      		  left_child: 0x564daeaed690
      		 right_child: 0x564daeaeca90
      		        type: NAME | {'main'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeca60)::::::::::::::::
      		  left_child: 0x564daeaed690
      		 right_child: 0x564daeaeca90
      		        type: NAME | {'main'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed690)::::::::::::::::
      		  left_child: 0x564daeaed5f0
      		 right_child: 0x564daeaed6e0
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed690)::::::::::::::::
      		  left_child: 0x564daeaed5f0
      		 right_child: 0x564daeaed6e0
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed5f0)::::::::::::::::
      		  left_child: 0x564daeaed618
      		 right_child: 0x564daeaed668
      		        type: INITIALIZATOR | {'var'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed5f0)::::::::::::::::
      		  left_child: 0x564daeaed618
      		 right_child: 0x564daeaed668
      		        type: INITIALIZATOR | {'var'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed618)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed618)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed668)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'4'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed668)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'4'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed6e0)::::::::::::::::
      		  left_child: 0x564daeaed6b8
      		 right_child: 0x564daeaeda28
      		        type: STATEMENT | {'('}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed6e0)::::::::::::::::
      		  left_child: 0x564daeaed6b8
      		 right_child: 0x564daeaeda28
      		        type: STATEMENT | {'('}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed6b8)::::::::::::::::
      		  left_child: 0x564daeaed708
      		 right_child: 0x564daeaed8e8
      		        type: INSTRUCTION | {'if'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed6b8)::::::::::::::::
      		  left_child: 0x564daeaed708
      		 right_child: 0x564daeaed8e8
      		        type: INSTRUCTION | {'if'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed708)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed708)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'y'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed8e8)::::::::::::::::
      		  left_child: 0x564daeaed7f8
      		 right_child: 0x564daeaed988
      		        type: INSTRUCTION | {'else'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed8e8)::::::::::::::::
      		  left_child: 0x564daeaed7f8
      		 right_child: 0x564daeaed988
      		        type: INSTRUCTION | {'else'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed7f8)::::::::::::::::
      		  left_child: 0x564daeaed7a8
      		 right_child: 0x564daeaed898
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed7f8)::::::::::::::::
      		  left_child: 0x564daeaed7a8
      		 right_child: 0x564daeaed898
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed7a8)::::::::::::::::
      		  left_child: 0x564daeaed780
      		 right_child: 0x564daeaed7d0
      		        type: ASSIGMENT | {'='}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed7a8)::::::::::::::::
      		  left_child: 0x564daeaed780
      		 right_child: 0x564daeaed7d0
      		        type: ASSIGMENT | {'='}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed780)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed780)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed7d0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'45'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed7d0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'45'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed898)::::::::::::::::
      		  left_child: 0x564daeaed848
      		 right_child: (nil)
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed898)::::::::::::::::
      		  left_child: 0x564daeaed848
      		 right_child: (nil)
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed848)::::::::::::::::
      		  left_child: 0x564daeaed820
      		 right_child: 0x564daeaed870
      		        type: ASSIGMENT | {'='}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed848)::::::::::::::::
      		  left_child: 0x564daeaed820
      		 right_child: 0x564daeaed870
      		        type: ASSIGMENT | {'='}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed820)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed820)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed870)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'10'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed870)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'10'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed988)::::::::::::::::
      		  left_child: 0x564daeaed938
      		 right_child: (nil)
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed988)::::::::::::::::
      		  left_child: 0x564daeaed938
      		 right_child: (nil)
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed938)::::::::::::::::
      		  left_child: 0x564daeaed910
      		 right_child: 0x564daeaed960
      		        type: ASSIGMENT | {'='}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed938)::::::::::::::::
      		  left_child: 0x564daeaed910
      		 right_child: 0x564daeaed960
      		        type: ASSIGMENT | {'='}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed910)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed910)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed960)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'20'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed960)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'20'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeda28)::::::::::::::::
      		  left_child: 0x564daeaed9b0
      		 right_child: 0x564daeaeca30
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeda28)::::::::::::::::
      		  left_child: 0x564daeaed9b0
      		 right_child: 0x564daeaeca30
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed9b0)::::::::::::::::
      		  left_child: 0x564daeaeda00
      		 right_child: (nil)
      		        type: INSTRUCTION | {'fout'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaed9b0)::::::::::::::::
      		  left_child: 0x564daeaeda00
      		 right_child: (nil)
      		        type: INSTRUCTION | {'fout'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeda00)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeda00)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeca30)::::::::::::::::
      		  left_child: 0x564daeaeda50
      		 right_child: 0x564daeaedc58
      		        type: CALL | {' '}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeca30)::::::::::::::::
      		  left_child: 0x564daeaeda50
      		 right_child: 0x564daeaedc58
      		        type: CALL | {' '}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeda50)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: NAME | {'helloworld'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeda50)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: NAME | {'helloworld'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedc58)::::::::::::::::
      		  left_child: 0x564daeaedb18
      		 right_child: (nil)
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedc58)::::::::::::::::
      		  left_child: 0x564daeaedb18
      		 right_child: (nil)
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedb18)::::::::::::::::
      		  left_child: 0x564daeaedaf0
      		 right_child: 0x564daeaedb68
      		        type: ASSIGMENT | {'='}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedb18)::::::::::::::::
      		  left_child: 0x564daeaedaf0
      		 right_child: 0x564daeaedb68
      		        type: ASSIGMENT | {'='}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedaf0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedaf0)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: VARIABLE | {'x'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedb68)::::::::::::::::
      		  left_child: 0x564daeaedb40
      		 right_child: 0x564daeaedbe0
      		        type: OPERATOR | {'*'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedb68)::::::::::::::::
      		  left_child: 0x564daeaedb40
      		 right_child: 0x564daeaedbe0
      		        type: OPERATOR | {'*'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedb40)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'1'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedb40)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'1'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedbe0)::::::::::::::::
      		  left_child: 0x564daeaedbb8
      		 right_child: 0x564daeaedc08
      		        type: OPERATOR | {'+'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedbe0)::::::::::::::::
      		  left_child: 0x564daeaedbb8
      		 right_child: 0x564daeaedc08
      		        type: OPERATOR | {'+'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedbb8)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'4'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedbb8)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'4'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedc08)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'5'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedc08)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'5'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeca90)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'double'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeca90)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'double'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeded8)::::::::::::::::
      		  left_child: 0x564daeaecaf0
      		 right_child: (nil)
      		        type: FUNCTION | {'}'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaeded8)::::::::::::::::
      		  left_child: 0x564daeaecaf0
      		 right_child: (nil)
      		        type: FUNCTION | {'}'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaecaf0)::::::::::::::::
      		  left_child: 0x564daeaede60
      		 right_child: 0x564daeaecb20
      		        type: NAME | {'helloworld'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaecaf0)::::::::::::::::
      		  left_child: 0x564daeaede60
      		 right_child: 0x564daeaecb20
      		        type: NAME | {'helloworld'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaede60)::::::::::::::::
      		  left_child: 0x564daeaedde8
      		 right_child: (nil)
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaede60)::::::::::::::::
      		  left_child: 0x564daeaedde8
      		 right_child: (nil)
      		        type: STATEMENT | {';'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedde8)::::::::::::::::
      		  left_child: 0x564daeaede38
      		 right_child: (nil)
      		        type: INSTRUCTION | {'fout'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaedde8)::::::::::::::::
      		  left_child: 0x564daeaede38
      		 right_child: (nil)
      		        type: INSTRUCTION | {'fout'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaede38)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'101'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaede38)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: CONSTANT | {'101'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaecb20)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'void'}      
      }

    PrintNode::
      {
      Token node
      (0x564daeaecb20)::::::::::::::::
      		  left_child: (nil)
      		 right_child: (nil)
      		        type: FUNCTION_RET_TYPE | {'void'}      
      }

    }

