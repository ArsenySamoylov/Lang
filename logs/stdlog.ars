Wed Dec  7 20:17:04 2022

main::
  {
  LOG CALLOC:     {0x60f000000040} = calloc (170, 1 = 170) from GetSrcFile:27, at ../ATC/Buffer/my_buffer.cpp:27
  Tokenizer::
    {
    LOG CALLOC:     {0x616000000080} = calloc (20, 32 = 640) from Tokenizer:42, at ./src/LexicalAnalysis.cpp:42
    BufferCtor::
      {

      BufferCtor:299 returned SUCCESS (return 0;)
      }

    GetTokenValue::
      {
      	temp: 'v'
      }

    GetTokenValue::
      {
      	temp: 'm'
      }

    GetTokenValue::
      {
      	temp: '{'
      }

    GetTokenValue::
      {
      	temp: 'v'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '1'
      }

    GetTokenValue::
      {
      	temp: 'i'
      }

    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: '{'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '4'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '-'
      }

    LOG REALLOC:     {0x616000000080} -> {0x61a000000080} = realloc (new size 1280, old size 640) from Tokenizer:58, at ./src/LexicalAnalysis.cpp:58
    GetTokenValue::
      {
      	temp: '1'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: '}'
      }

    GetTokenValue::
      {
      	temp: 'e'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '2'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: 'f'
      }

    GetTokenValue::
      {
      	temp: '<'
      }

    GetTokenValue::
      {
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: '#'
      	temp: 'x'
      }

    GetTokenValue::
      {
      	temp: '='
      }

    GetTokenValue::
      {
      	temp: '1'
      }

    GetTokenValue::
      {
      	temp: '*'
      }

    GetTokenValue::
      {
      	temp: '('
      }

    GetTokenValue::
      {
      	temp: '4'
      }

    GetTokenValue::
      {
      	temp: '+'
      }

    GetTokenValue::
      {
      	temp: '5'
      }

    LOG REALLOC:     {0x61a000000080} -> {0x61e000000080} = realloc (new size 2560, old size 1280) from Tokenizer:58, at ./src/LexicalAnalysis.cpp:58
    GetTokenValue::
      {
      	temp: ')'
      }

    GetTokenValue::
      {
      	temp: ';'
      }

    GetTokenValue::
      {
      	temp: '}'
      }

    LOG REALLOC:     {0x61e000000080} -> {0x61a000000680} = realloc (new size 1376, old size 2560) from Tokenizer:77, at ./src/LexicalAnalysis.cpp:77
    	number_of_tokens: 43
    	i: 0
    Token *tokens_arr + i
    (0x61a000000680)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: UNCKNOWN TYPE
    	i: 1
    Token *tokens_arr + i
    (0x61a0000006a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: VARIABLE | {m}

    	i: 2
    Token *tokens_arr + i
    (0x61a0000006c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPENING BRACKET | {{}

    	i: 3
    Token *tokens_arr + i
    (0x61a0000006e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: UNCKNOWN TYPE
    	i: 4
    Token *tokens_arr + i
    (0x61a000000700)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: VARIABLE | {x}

    	i: 5
    Token *tokens_arr + i
    (0x61a000000720)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {=}

    	i: 6
    Token *tokens_arr + i
    (0x61a000000740)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {1}

    	i: 7
    Token *tokens_arr + i
    (0x61a000000760)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'if'}

    	i: 8
    Token *tokens_arr + i
    (0x61a000000780)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION OPENING BRACKET | {(}

    	i: 9
    Token *tokens_arr + i
    (0x61a0000007a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: VARIABLE | {x}

    	i: 10
    Token *tokens_arr + i
    (0x61a0000007c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION CLOSING BRACKET | {)}

    	i: 11
    Token *tokens_arr + i
    (0x61a0000007e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPENING BRACKET | {{}

    	i: 12
    Token *tokens_arr + i
    (0x61a000000800)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: VARIABLE | {x}

    	i: 13
    Token *tokens_arr + i
    (0x61a000000820)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {=}

    	i: 14
    Token *tokens_arr + i
    (0x61a000000840)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {45}

    	i: 15
    Token *tokens_arr + i
    (0x61a000000860)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT| {;}

    	i: 16
    Token *tokens_arr + i
    (0x61a000000880)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: VARIABLE | {x}

    	i: 17
    Token *tokens_arr + i
    (0x61a0000008a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {=}

    	i: 18
    Token *tokens_arr + i
    (0x61a0000008c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: VARIABLE | {x}

    	i: 19
    Token *tokens_arr + i
    (0x61a0000008e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {-}

    	i: 20
    Token *tokens_arr + i
    (0x61a000000900)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {10}

    	i: 21
    Token *tokens_arr + i
    (0x61a000000920)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT| {;}

    	i: 22
    Token *tokens_arr + i
    (0x61a000000940)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CLOSING BRACKET | {}}

    	i: 23
    Token *tokens_arr + i
    (0x61a000000960)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'else'}

    	i: 24
    Token *tokens_arr + i
    (0x61a000000980)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: VARIABLE | {x}

    	i: 25
    Token *tokens_arr + i
    (0x61a0000009a0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {=}

    	i: 26
    Token *tokens_arr + i
    (0x61a0000009c0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {20}

    	i: 27
    Token *tokens_arr + i
    (0x61a0000009e0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT| {;}

    	i: 28
    Token *tokens_arr + i
    (0x61a000000a00)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: INSTRUCTION | {'fout'}

    	i: 29
    Token *tokens_arr + i
    (0x61a000000a20)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {<}

    	i: 30
    Token *tokens_arr + i
    (0x61a000000a40)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: VARIABLE | {x}

    	i: 31
    Token *tokens_arr + i
    (0x61a000000a60)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT| {;}

    	i: 32
    Token *tokens_arr + i
    (0x61a000000a80)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: VARIABLE | {x}

    	i: 33
    Token *tokens_arr + i
    (0x61a000000aa0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: ASSIGMENT | {=}

    	i: 34
    Token *tokens_arr + i
    (0x61a000000ac0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {1}

    	i: 35
    Token *tokens_arr + i
    (0x61a000000ae0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {*}

    	i: 36
    Token *tokens_arr + i
    (0x61a000000b00)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION OPENING BRACKET | {(}

    	i: 37
    Token *tokens_arr + i
    (0x61a000000b20)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {4}

    	i: 38
    Token *tokens_arr + i
    (0x61a000000b40)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: OPERATOR | {+}

    	i: 39
    Token *tokens_arr + i
    (0x61a000000b60)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CONSTANT | {5}

    	i: 40
    Token *tokens_arr + i
    (0x61a000000b80)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: EXPRESSION CLOSING BRACKET | {)}

    	i: 41
    Token *tokens_arr + i
    (0x61a000000ba0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: END_OF_STATEMENT| {;}

    	i: 42
    Token *tokens_arr + i
    (0x61a000000bc0)::::::::::::::::
    		  left_child: (nil)
    		 right_child: (nil)
    		        type: CLOSING BRACKET | {}}

    }

  LOG FREE(kill): {0x60f000000130} - will be freed from main:36, at ./src/main.cpp:36
  GetG::
    {
    GetFunction::
      {
      Syntax ERROR
      Missing { in function body

      return Null ptr;Returnig null ptr (GetFunction:129)
      }

    }

  LOG FREE(kill): {0x61a000000680} - will be freed from main:54, at ./src/main.cpp:54

  Failed (./src/main.cpp:55, main:55)(return -1;)
  }

*********************************************************************
		Log Successfuly ended, on Wed Dec  7 20:17:04 2022
*********************************************************************
